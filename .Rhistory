tracks_SS_23 <- joinTable(trk_whales23, BB_23, TO_23)
#Plots
worldmap <- ne_countries(scale = 'medium', type = 'map_units',
returnclass = 'sf')
calif <- st_crop(worldmap,
xmin = 33.7,
xmax = 40,
ymin = -131,
ymax = -122)
calif <- st_transform(calif, 4326)
tmap_options(basemaps=c(Terrain = "Esri.WorldTerrain",
Imagery = "Esri.WorldImagery",
OceanBasemap = "Esri.OceanBasemap",
Topo="OpenTopoMap",
Ortho="GeoportailFrance.orthos"))
tm_shape(worldmap, bbox = calif) + tm_polygons()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(raster)
library(terra)
library(PAMpal)
library(PAMmisc)
library(marmap)
library(rerddap)
# Downloads data from servers onto external hard drive. Uncomment and only run once.
#tracks_SS_07 <- matchEnvData(tracks_SS_07, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST07", var = c('analysed_sst'))
#tracks_SS_08 <- matchEnvData(tracks_SS_08, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST08", var = c('analysed_sst'))
#tracks_SS_10 <- matchEnvData(tracks_SS_10, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST10", var = c('analysed_sst'))
#tracks_SS_12 <- matchEnvData(tracks_SS_12, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST12", var = c('analysed_sst'))
#tracks_SS_13 <- matchEnvData(tracks_SS_13, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST13", var = c('analysed_sst'))
#tracks_SS_14 <- matchEnvData(tracks_SS_14, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST14", var = c('analysed_sst'))
#tracks_SS_16 <- matchEnvData(tracks_SS_16, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST16", var = c('analysed_sst'))
#tracks_SS_18 <- matchEnvData(tracks_SS_18, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST18", var = c('analysed_sst'))
#tracks_SS_19 <- matchEnvData(tracks_SS_19, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST19", var = c('analysed_sst'))
#tracks_SS_20 <- matchEnvData(tracks_SS_20, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST20", var = c('analysed_sst'))
#tracks_SS_21 <- matchEnvData(tracks_SS_21, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST21", var = c('analysed_sst'))
#tracks_SS_22 <- matchEnvData(tracks_SS_22, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST22", var = c('analysed_sst'))
#tracks_SS_23 <- matchEnvData(tracks_SS_23, nc = 'jplMURSST41', fileName = "D:/Environ_variables/analysedSST23", var = c('analysed_sst'))
SSTlist <- dir("D:/Environ_variables", recursive=TRUE, full.names=TRUE, pattern="analysedSST")
for (ss in SSTlist) {
data <- matchEnvData(get(paste0("tracks_SS_", substr(ss, 33, 34))), nc = ss) %>%
rename(., sst_mean = analysed_sst_mean) %>%
dplyr::select(-matchLong_mean, -matchLat_mean, -matchTime_mean)   # rename new column to "sst_mean" and remove unnecessary columns
assign(paste0("tracks_SS_", substr(ss, 33, 34)), data)
}
# Downloads data from servers onto external hard drive. Uncomment and only run once.
#tracks_SS_07 <- matchEnvData(tracks_SS_07, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress07.nc", var = c('curl'))
#tracks_SS_08 <- matchEnvData(tracks_SS_08, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress08.nc", var = c('curl'))
#tracks_SS_10 <- matchEnvData(tracks_SS_10, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress10.nc", var = c('curl'))
#tracks_SS_12 <- matchEnvData(tracks_SS_12, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress12.nc", var = c('curl'))
#tracks_SS_13 <- matchEnvData(tracks_SS_13, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress13.nc", var = c('curl'))
#tracks_SS_14 <- matchEnvData(tracks_SS_14, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress14.nc", var = c('curl'))
#tracks_SS_16 <- matchEnvData(tracks_SS_16, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress16.nc", var = c('curl'))
#tracks_SS_18 <- matchEnvData(tracks_SS_18, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress18.nc", var = c('curl'))
#tracks_SS_19 <- matchEnvData(tracks_SS_19, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress19.nc", var = c('curl'))
#tracks_SS_20 <- matchEnvData(tracks_SS_20, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress20.nc", var = c('curl'))
#tracks_SS_21 <- matchEnvData(tracks_SS_21, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress21.nc", var = c('curl'))
#tracks_SS_22 <- matchEnvData(tracks_SS_22, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress22.nc", var = c('curl'))
#tracks_SS_23 <- matchEnvData(tracks_SS_23, nc = 'erdQAstress1day', fileName = "D:/Environ_variables/windstress23.nc", var = c('curl'))
# Pulls from downloaded file
#tracks_SS_08 <- matchEnvData(tracks_SS_08, nc = 'data-raw/erdQMstress1day_LonPM180.nc')
#tracks_SS_08
#windcurl <- erddapToEdinfo('erdQMstress1day', baseurl = 'https://coastwatch.pfeg.noaa.gov/erddap/')
#tracks_SS_08 <- matchEnvData(tracks_SS_08, nc=windcurl, fileName='windcurl.nc')
windlist <- dir("D:/Environ_variables", recursive=TRUE, full.names=TRUE, pattern="windstress")
for (w in windlist) {
data <- matchEnvData(get(paste0("tracks_SS_", substr(w, 32, 33))), nc = w) %>%
dplyr::select(-matchLong_mean, -matchLat_mean, -matchTime_mean, -matchDepth_mean)   # remove unnecessary columns
assign(paste0("tracks_SS_", substr(w, 32, 33)), data)
}
```{r}
# Increase cell size by factor of 5 to be visible
bathy <- rast("D:/CCES_gebco_bathy.tif") # Bathymetry for all of CCE from https://download.gebco.net/
agg <- terra::aggregate(bathy, 5)
#plot(agg)
# Rasterize track with agg as the template
#TOL_rast <- rasterize(trk_TOL_08, agg, field = "TOL_125")
cont <- st_as_sf(as.contour(bathy, ))
cont_slope <- cont %>% filter(level == -2000) #Is 2000m the correct depth for continental shelf?
#tracklist <- as.list(ls(pattern = "tracks_SS_"))
#tracklist <- dir(names(.GlobalEnv), recursive=TRUE, full.names=TRUE, pattern="tracks_SS_")
tracklist <- grep(pattern = "tracks_SS_", names(.GlobalEnv), value = T)
tracklist
get("tracks_SS_20")
substr(tracks_SS_20, 32, 33)
substr("tracks_SS_20", 32, 33)
substr(tracklist[6], 11, 12)))
substr(tracklist[6], 11, 12)
for (t in tracklist) {
sf <- st_as_sf(get(t), coords = c("Longitude", "Latitude"), crs=4326, remove=F)
trk <- rasterize(vect(sf), agg)
slop <- terra::distance(trk, vect(cont_slope))
ext <- terra::extract(slop, vect(sf))
dbind <- cbind(sf, ext) %>% ### HErE help!!
dplyr::select(-ID, -dist2slope) %>%
rename("dist2slope" = last) %>%
st_set_geometry(NULL)
assign(paste0("tracks_SS_", substr(t, 11, 12)), dbind)
}
for (t in tracklist) {
sf <- st_as_sf(get(t), coords = c("Longitude", "Latitude"), crs=4326, remove=F)
trk <- rasterize(vect(sf), agg)
slop <- terra::distance(trk, vect(cont_slope))
ext <- terra::extract(slop, vect(sf))
dbind <- cbind(sf, ext) %>% ### HErE help!!
dplyr::select(-ID) %>%
rename("dist2slope" = last) %>%
st_set_geometry(NULL)
assign(paste0("tracks_SS_", substr(t, 11, 12)), dbind)
}
View(tracks_SS_20)
View(BB_23)
View(BB_10)
View(AllTracks)
View(BB_23)
View(tracks_SS_23)
View(tracks)
depthlist <- dir("D:/Environ_variables", recursive=TRUE, full.names=TRUE, pattern="depth")
for (dd in depthlist) {
data <- matchEnvData(get(paste0("tracks_SS_", substr(dd, 27, 28))), nc = dd) %>%
rename(., depth = z_mean) %>%        # rename new column to "depth"
mutate(depth = depth*-1) %>%
dplyr::select(-matchLong_mean, -matchLat_mean, -matchTime_mean)
assign(paste0("tracks_SS_", substr(dd, 27, 28)), data)
}
?terrain
bgo_slope <- terra::terrain(bathy, v = "slope")
plot(bgo_slope)
bgobathy <- terra::terrain(bathy)
plot(bgobathy)
plot(bgo_slope)
bgo_slope
bgobathy
bgobathy <- terra::terrain(bathy, v = "roughness")
plot(bgobathy)
bgobathy
terra::terrain(bathy)
?terra::extract
?raster::extract
?rasterize
?rast
tracks_SS_08[,4:3]
?terra:extract
?terra::extract
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
#library(raster)
library(terra)
library(PAMpal)
library(PAMmisc)
#library(marmap)
library(rerddap)
bathy_slope <- terra::terrain(bathy, v = "slope")
for (t in tracklist) {
slope <- terra::extract(bathy_slope, get(t[,4:3]))
sbind <- cbind(get(t), slope)
assign(paste0("tracks_SS_", substr(t, 11, 12)), sbind)
}
tracklist[6]
get(tracklist[6])
get(tracklist[6])[,4:3]
bathy_slope <- terra::terrain(bathy, v = "slope")
for (t in tracklist) {
slope <- terra::extract(bathy_slope, get(t)[,4:3])
sbind <- cbind(get(t), slope)
assign(paste0("tracks_SS_", substr(t, 11, 12)), sbind)
}
# Extract slope values at points along drift 8
#slope <- terra::extract(bathy_slope, tracks_SS_08[,4:3])
#tracks_SS_08 <- cbind(tracks_SS_08, slope)
bathy_slope <- terra::terrain(bathy, v = "slope")
for (t in tracklist) {
slope <- terra::extract(bathy_slope, get(t)[,4:3])
sbind <- cbind(get(t), slope) %>%
dplyr::select(-ID, -slope) %>%
rename("bathy_slope" = slope) %>%
assign(paste0("tracks_SS_", substr(t, 11, 12)), sbind)
}
?dplyr::select
bathy_slope <- terra::terrain(bathy, v = "slope")
for (t in tracklist) {
slope <- terra::extract(bathy_slope, get(t)[,4:3])
sbind <- cbind(get(t), slope) %>%
dplyr::select(all_of(-ID, -slope)) %>%
rename("bathy_slope" = slope) %>%
assign(paste0("tracks_SS_", substr(t, 11, 12)), sbind)
}
bathy_slope <- terra::terrain(bathy, v = "slope")
for (t in tracklist) {
slope <- terra::extract(bathy_slope, get(t)[,4:3])
sbind <- cbind(get(t), slope) %>%
dplyr::select(all_of(-ID)) %>%
rename("bathy_slope" = slope) %>%
assign(paste0("tracks_SS_", substr(t, 11, 12)), sbind)
}
sbind
slope
for (t in tracklist) {
slope <- terra::extract(bathy_slope, get(t)[,4:3]) %>%
dplyr::select(all_of(-ID)) %>%
rename("bathy_slope" = slope)
sbind <- cbind(get(t), slope) #%>%
#dplyr::select(all_of(-ID)) %>%
#rename("bathy_slope" = slope)
assign(paste0("tracks_SS_", substr(t, 11, 12)), sbind)
}
for (t in tracklist) {
slope <- terra::extract(bathy_slope, get(t)[,4:3]) %>%
dplyr::select(-ID) %>%
rename("bathy_slope" = slope)
sbind <- cbind(get(t), slope) #%>%
#dplyr::select(all_of(-ID)) %>%
#rename("bathy_slope" = slope)
assign(paste0("tracks_SS_", substr(t, 11, 12)), sbind)
}
View(tracks_SS_20)
distlist <- dir("D:/Environ_variables", recursive=TRUE, full.names=TRUE, pattern="dist2shore")
for (d2 in distlist) {
data <- matchEnvData(get(paste0("tracks_SS_", substr(d2, 32, 33))), nc = d2) %>%
rename(., dist2shore = dist_mean) %>%
dplyr::select(-matchLong_mean, -matchLat_mean, -matchTime_mean)
assign(paste0("tracks_SS_", substr(d2, 32, 33)), data)
}
chlalist <- dir("D:/Environ_variables", recursive=TRUE, full.names=TRUE, pattern="chlorophyll")
for (ch in chlalist) {
data <- matchEnvData(get(paste0("tracks_SS_", substr(ch, 33, 34))), nc = ch) %>%
dplyr::select(-matchLong_mean, -matchLat_mean, -matchTime_mean)
assign(paste0("tracks_SS_", substr(ch, 33, 34)), data)
}
sshlist <- dir("D:/Environ_variables", recursive=TRUE, full.names=TRUE, pattern="ssh")
for (sh in sshlist) {
data <- matchEnvData(get(paste0("tracks_SS_", substr(sh, 25, 26))), nc = sh) %>%
rename(., ssh_mean = sla_mean) %>%
dplyr::select(-matchLong_mean, -matchLat_mean, -matchTime_mean)
assign(paste0("tracks_SS_", substr(sh, 25, 26)), data)
}
data <- matchEnvData(get("tracks_SS_20"), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
thermData <- bind_rows(lapply(data, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
calcThermoVars <- function(depth, temp, mldMode='SST8', thermMode='variso', plot=FALSE) {
# depthInterp <- approxfun(x=temp, y=depth)
switch(match.arg(mldMode),
'SST8' = {
mldTemp <- temp[1] - 0.8
# first few temps are likely to have repeat values that trigger
# warnings for approxfun, so cut off to only values after mldTemp
useMin <- min(which(temp <= mldTemp)) - 1
useIx <- useMin:length(temp)
depthInterp <- approxfun(x=temp[useIx], y=depth[useIx])
mld <- depthInterp(mldTemp)
}
)
switch(match.arg(thermMode),
'variso' = {
t400 <- approx(x=depth, y=temp, xout=400)$y
# therm end is half way to t400 temp
tEnd <- mldTemp + (t400 - mldTemp)/2
# therm temp is midpt from mld to end
tt <- (mldTemp + tEnd)/2
# tt <- mldTemp - .25 * (mldTemp - t400)
ttDepth <- depthInterp(tt)
tEndDepth <- depthInterp(tEnd)
}
)
if(plot) {
to300 <- depth <= 300
plot(x=temp[to300], y=-depth[to300],
main = paste0('MixLayer: ', round(mld,0), 'm ', round(mldTemp, 1), 'C',
'\nTherm: ', round(ttDepth, 0), 'm ', round(tt, 1), 'C'),
xlab='Temp (C)', ylab='Depth (m)')
lines(x=temp[to300], y=-depth[to300])
lines(x=c(mldTemp, tEnd), y=c(-mld, -tEndDepth), col='darkgray', lwd=4)
points(x=c(mldTemp, tt), y=c(-mld, -ttDepth), col='blue', cex=1.5, pch=15)
}
list(mldDepth = mld, mldTemp = mldTemp,
ttDepth = ttDepth, ttTemp = tt)
}
warnings(Data)
warnings(data)
thermData20 <- bind_rows(lapply(data, function(x) {
+     # do thermo calcs
+     result <- calcThermoVars(x$matchDepth, x$water_temp)
+     # get specific values
+     result$temp400 <- x$water_temp[x$matchDepth == 400]
+     result$sal400 <- x$salinity[x$matchDepth == 400]
+     result
+ }))
thermData20 <- bind_rows(lapply(data, function(x) {
+     # do thermo calcs
+     result <- calcThermoVars(x$matchDepth, x$water_temp)
+     # get specific values
+     result$temp400 <- x$water_temp[x$matchDepth == 400]
+     result$sal400 <- x$salinity[x$matchDepth == 400]     result
thermData <- bind_rows(lapply(data, function(x) {
+     # do thermo calcs
+     result <- calcThermoVars(x$matchDepth, x$water_temp)
+     # get specific values
+     result$temp400 <- x$water_temp[x$matchDepth == 400]
+     result$sal400 <- x$salinity[x$matchDepth == 400]
+     result
+ }))
thermData <- bind_rows(lapply(data, function(x) {
+     # do thermo calcs
+     result <- calcThermoVars(x$matchDepth, x$water_temp)
+     # get specific values
+     result$temp400 <- x$water_temp[x$matchDepth == 400]
+     result$sal400 <- x$salinity[x$matchDepth == 400]
+     result
+ }
thermData <- bind_rows(lapply(data, function(x) {
+     # do thermo calcs
+     result <- calcThermoVars(x$matchDepth, x$water_temp)
+     # get specific values
+     result$temp400 <- x$water_temp[x$matchDepth == 400]
+     result$sal400 <- x$salinity[x$matchDepth == 400]
+     result}
)
)
data
test20 <- matchEnvData(as.data.frame(tracks_SS_20), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
?matchEnvData
head(test20)
thermData20 <- bind_rows(lapply(test, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
thermData20 <- bind_rows(lapply(test20, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
head(thermData20)
View(ThemData20)
View(ThermData20)
View(thermData20)
test_fin <- cbind(tracks_SS_20, thermData20)
View(test_fun)
View(test_fin)
tracklist
test18 <- matchEnvData(as.data.frame(tracks_SS_18), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
thermData18 <- bind_rows(lapply(test18, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
test_fin <- cbind(tracks_SS_18, thermData18)
View(test_fin)
?message
message("function successful")
test16 <- matchEnvData(as.data.frame(tracks_SS_16), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
View(inters2)
thermData16 <- bind_rows(lapply(test16, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
test_fin <- cbind(tracks_SS_16, thermData16)
View(test_fin)
test22 <- matchEnvData(as.data.frame(tracks_SS_22), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000) %>%
message("server download successful")
thermData22 <- bind_rows(lapply(test22, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
test_fin <- cbind(tracks_SS_22, thermData22)
View(tracks_SS_22)
thermData22
test22
test22 <- matchEnvData(as.data.frame(tracks_SS_22), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
test22
thermData22 <- bind_rows(lapply(test22, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
test_fin <- cbind(tracks_SS_22, thermData22)
View(test_fin)
paste0("tracks_SS_", substr(tracklist[4], 11, 12))
tracklist
test14 <- matchEnvData(as.data.frame(tracks_SS_14), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
thermData14 <- bind_rows(lapply(test22, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
test_fin <- cbind(tracks_SS_14, thermData14)
thermData14 <- bind_rows(lapply(test14, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
test_fin <- cbind(tracks_SS_14, thermData14)
get(paste0("tracks_SS_", substr(tracklist[6], 11, 12)
)
)
for (t in tracklist) {
Hdata <- matchEnvData(as.data.frame(get(paste0("tracks_SS_", substr(t, 11, 12)))), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
thermData <- bind_rows(lapply(Hdata, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
bindr <- cbind(get(paste0("tracks_SS_", substr(t, 11, 12)), thermData))
assign(paste0("tracks_SS_", substr(t, 11, 12)), bindr) #fix this part?
}
head()tracks_SS_20
head(tracks_SS_20)
tracklist
get(paste0("tracks_SS_", substr(tracklist[1], 11, 12))
))
get(paste0("tracks_SS_", substr(tracklist[1], 11, 12)))
for (t in tracklist) {
Hdata <- matchEnvData(as.data.frame(get(paste0("tracks_SS_", substr(t, 11, 12)))), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
thermData <- bind_rows(lapply(Hdata, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
bindr <- cbind(get(paste0("tracks_SS_", substr(t, 11, 12))), thermData)
assign(paste0("tracks_SS_", substr(t, 11, 12)), bindr) #fix this part?
}
tracklist
View(tracks_SS_21)
View(tracks_SS_22)
View(tracks_SS_23)
View(tracks_SS_10)
View(tracks_SS_12)
View(tracks_SS_13)
View(tracks_SS_13
View(tracks_SS_14)
View(tracks_SS_16)
View(tracks_SS_18)
View(tracks_SS_19)
View(tracks_SS_07)
View(tracks_SS_08)
test07 <- matchEnvData(as.data.frame(tracks_SS_07), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
thermData07 <- bind_rows(lapply(test07, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
test_fin <- cbind(tracks_SS_07, thermData07)
test_fin
tracks_SS_07 <- cbind(tracks_SS_07, thermData07)
head(tracks_SS_07)
saveRDS(tracks_SS_10, 'data/fulltrack10.rda')
saveRDS(tracks_SS_12, 'data/fulltrack12.rda')
saveRDS(tracks_SS_13, 'data/fulltrack13.rda')
saveRDS(tracks_SS_14, 'data/fulltrack14.rda')
saveRDS(tracks_SS_16, 'data/fulltrack16.rda')
saveRDS(tracks_SS_18, 'data/fulltrack18.rda')
saveRDS(tracks_SS_19, 'data/fulltrack19.rda')
saveRDS(tracks_SS_20, 'data/fulltrack20.rda')
saveRDS(tracks_SS_21, 'data/fulltrack21.rda')
saveRDS(tracks_SS_22, 'data/fulltrack22.rda')
saveRDS(tracks_SS_23, 'data/fulltrack23.rda')
saveRDS(tracks_SS_07, 'data/fulltrack07.rda')
#saveRDS(tracks_SS_08, 'data/fulltrack08.rda')
test08 <- matchEnvData(as.data.frame(tracks_SS_08), nc=PAMmisc::hycomList, var=c('water_temp', 'salinity'), raw=TRUE, depth = 0:1000)
thermData08 <- bind_rows(lapply(test08, function(x) {
# do thermo calcs
result <- calcThermoVars(x$matchDepth, x$water_temp)
# get specific values
result$temp400 <- x$water_temp[x$matchDepth == 400]
result$sal400 <- x$salinity[x$matchDepth == 400]
result
}))
tracks_SS_08 <- cbind(tracks_SS_08, thermData08)
saveRDS(tracks_SS_08, 'data/fulltrack08.rda')
