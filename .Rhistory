tracks_SS_16 <- joinTable(trk_whales16, BB_16, TO_16)
tracks_SS_18 <- joinTable(trk_whales18, BB_18, TO_18)
tracks_SS_19 <- joinTable(trk_whales19, BB_19, TO_19)
tracks_SS_20 <- joinTable(trk_whales20, BB_20, TO_20)
tracks_SS_21 <- joinTable(trk_whales21, BB_21, TO_21)
tracks_SS_22 <- joinTable(trk_whales22, BB_22, TO_22)
tracks_SS_23 <- joinTable(trk_whales23, BB_23, TO_23)
trk_whales12
View(trk_whales12)
View(tracks_SS_12)
whales$station
View(whales)
nrow(whales$station==12)
whales$station==12
whales[whales$station==12]
whales[whales$station==12,]
nrows(whales[whales$station==12,])
nrow(whales[whales$station==12,])
# Number of rows per station
nrow(whales[whales$station==12,])
nrow(trk_whales12[trk_whales12$station==12,])
View(trk_whales12)
View(allDrifts)
nrow(allDrifts[allDrifts$TOL_125==NA,])
nrow(allDrifts[allDrifts$TOL_125==NULL,])
nrow(allDrifts[allDrifts$TOL_125=="NA",])
model1 <- gam(depth ~ s(TOL_125, by = BWpresence), data = allDrifts, method = "REML")
library(tidyverse)
library(mgcv)
ftlist <- dir("data/", recursive=TRUE, full.names=TRUE, pattern="fulltrack")
for (ft in ftlist) {
df <- readRDS(ft)
assign(paste0("fulltrack", substr(ft, 15, 16)), df)
}
allDrifts <- rbind(fulltrack07, fulltrack08, fulltrack10, fulltrack12, fulltrack13, fulltrack14,
fulltrack16, fulltrack18, fulltrack19, fulltrack20, fulltrack21, fulltrack22, fulltrack23)
model1 <- gam(depth ~ s(TOL_125, by = BWpresence), data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(depth ~ s(TOL_125) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(depth ~ s(TOL_2000) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(depth ~ s(TOL_20000) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(depth ~ s(TOL_500) + BWpresence, data = allDrifts, method = "REML")
model1 <- gam(depth ~ s(TOL_5000) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(depth ~ s(TOL_125) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(dist2slope ~ s(TOL_125) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(mldTemp ~ s(TOL_125) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(mldTemp ~ s(TOL_125, by = BWpresence) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(mldTemp ~ s(TOL_125, by = BWpresence), data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(mldTemp ~ s(TOL_125) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
model1 <- gam(mldTemp ~ s(TOL_125) + s(TOL_2000) + BWpresence, data = allDrifts, method = "REML")
plot(model1)
summary(model1)
plot(model1)
plot(model1, pages = 1, all.terms = TRUE)
plot(model1, pages = 1, all.terms = TRUE, residuals = TRUE)
plot(model1, pages = 1, all.terms = TRUE, shade = TRUE)
model1 <- gam(mldTemp ~ s(TOL_125) + s(TOL_2000) +  s(bathy_slope) + s(temp400) + BWpresence, data = allDrifts, method = "REML")
plot(model1, pages = 1, all.terms = TRUE, shade = TRUE)
model1 <- gam(TOL_125 ~ s(TOL_2000) +  s(bathy_slope) + s(temp400) + BWpresence, data = allDrifts, method = "REML")
plot(model1, pages = 1, all.terms = TRUE, shade = TRUE)
gam.check(model1)
model1 <- gam(TOL_125 ~ s(TOL_2000) +  s(bathy_slope) + s(temp400, by = BWpresence) + BWpresence, data = allDrifts, method = "REML")
plot(model1, pages = 1, all.terms = TRUE, shade = TRUE)
summary(model1)
model1 <- gam(TOL_125 ~ s(dist2slope, by = BWpresence) + BWpresence, data = allDrifts, method = "REML")
model1 <- gam(TOL_125 ~ s(dist2coast, by = BWpresence) + BWpresence, data = allDrifts, method = "REML")
model1 <- gam(TOL_125 ~ s(dist2shore, by = BWpresence) + BWpresence, data = allDrifts, method = "REML")
summary(model1)
model1 <- gam(TOL_125, BWpresence), bs = "fs")
model1 <- gam(TOL_125, BWpresence, bs = "fs")
model1 <- gam(TOL_125 ~ s(dis2shore, BWpresence, bs = "fs"), data = allDrifts, method = "REML")
model1 <- gam(TOL_125 ~ s(dist2shore, BWpresence, bs = "fs"), data = allDrifts, method = "REML")
summary(model1)
plot(model1, pages = 1, all.terms = TRUE, shade = TRUE)
plot(model1, pages = 1)
model1 <- gam(TOL_125 ~ s(dist2shore, as.factor(BWpresence), bs = "fs"), data = allDrifts, method = "REML")
plot(model1, pages = 1)
summary(model1)
model1 <- gam(TOL_125 ~ te(dist2shore, as.factor(BWpresence), bs = "fs"), data = allDrifts, method = "REML")
model1 <- gam(TOL_125 ~ te(dist2shore, BWpresence, bs = "fs"), data = allDrifts, method = "REML")
model1 <- gam(TOL_125 ~ te(dist2shore, BWpresence), data = allDrifts, method = "REML")
model1 <- gam(TOL_125 ~ te(dist2shore, BWpresence), k = 5, data = allDrifts, method = "REML")
model1 <- gam(TOL_125 ~ te(dist2shore, BWpresence), k = 2, data = allDrifts, method = "REML")
model1 <- gam(BWpresence ~ s(TOL_125), data = allDrifts, family = binomial, method = "REML")
plogis(coef(model1[1]))
plot(model1, pages = 1)
plogis(coef(model1[1]))
model1 <- gam(BWpresence ~ s(TOL_125) + s(TOL_5000) + s(TOL_2000) + s(TOL_20000) + s(depth) + s(mldDepth),
data = allDrifts, family = binomial, method = "REML")
summary(model1)
plot(model1, pages = 1, trans = plogis,
shift = coef(model1)[1])
#Probability scale
plot(model1, pages = 1, trans = plogis,
shift = coef(model1)[1])
#Log odds scale
plot(model1, pages = 1)
#Probability scale + centered on the intercept
plot(model1, pages = 1, trans = plogis,
shift = coef(model1)[1],
seWithMean = TRUE)
head(allDrifts)
model1 <- gam(BWpresence ~ s(TOL_125) + s(TOL_5000) + s(TOL_2000) + s(TOL_20000)
+ s(depth) + s(mldDepth) + s(Latitude) + s(Longitude) + s(BB_20.24000)
+ s(TOL_63) + s(sst_mean) + s(curl_mean) + s(dist2slope) + s(bathy_slope)
+ s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean) + s(mldTemp) + s(ttDepth)
+ s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
#Log odds scale (when used with family = binomial)
plot(model1, pages = 1)
#Log odds scale (when used with family = binomial)
plot(model1, pages = 2)
#Log odds scale (when used with family = binomial)
plot(model1, pages = 3)
#Log odds scale (when used with family = binomial)
plot(model1, pages = 6)
#Probability scale + centered on the intercept + adding intercept-related uncertainty with seWithMean arg
plot(model1, pages = 6, trans = plogis,
shift = coef(model1)[1])#,
#Probability scale + centered on the intercept + adding intercept-related uncertainty with seWithMean arg
plot(model1, pages = 8, trans = plogis,
shift = coef(model1)[1])#,
model2 <- gam(species ~ s(TOL_125) + s(TOL_5000) + s(TOL_2000) + s(TOL_20000)
+ s(depth) + s(mldDepth) + s(Latitude) + s(Longitude) + s(BB_20.24000)
+ s(TOL_63) + s(sst_mean) + s(curl_mean) + s(dist2slope) + s(bathy_slope)
+ s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean) + s(mldTemp) + s(ttDepth)
+ s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
library(tidyverse)
library(mgcv)
model2 <- gam(species ~ s(TOL_125) + s(TOL_5000) + s(TOL_2000) + s(TOL_20000)
+ s(depth) + s(mldDepth) + s(Latitude) + s(Longitude) + s(BB_20.24000)
+ s(TOL_63) + s(sst_mean) + s(curl_mean) + s(dist2slope) + s(bathy_slope)
+ s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean) + s(mldTemp) + s(ttDepth)
+ s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
head(allDrifts)
model2 <- gam(as.factor(species) ~ s(TOL_125) + s(TOL_5000) + s(TOL_2000) + s(TOL_20000)
+ s(depth) + s(mldDepth) + s(Latitude) + s(Longitude) + s(BB_20.24000)
+ s(TOL_63) + s(sst_mean) + s(curl_mean) + s(dist2slope) + s(bathy_slope)
+ s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean) + s(mldTemp) + s(ttDepth)
+ s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
plot(model2, pages = 6)
model2 <- gam(BWpresence ~ s(TOL_125, by = species) +
data = allDrifts, family = binomial, method = "REML")
model2 <- gam(BWpresence ~ s(TOL_125, by = species),
data = allDrifts, family = binomial, method = "REML")
model2 <- gam(BWpresence ~ s(TOL_125, by = as.factor(species)),
data = allDrifts, family = binomial, method = "REML")
plot(model2, pages = 1)
model2 <- gam(BWpresence ~ s(TOL_2000, by = as.factor(species)),
data = allDrifts, family = binomial, method = "REML")
plot(model2, pages = 1)
model2 <- gam(BWpresence ~ s(bathy_slope, by = as.factor(species)),
data = allDrifts, family = binomial, method = "REML")
plot(model2, pages = 1)
model2 <- gam(BWpresence ~ s(temp400, by = as.factor(species)),
data = allDrifts, family = binomial, method = "REML")
plot(model2, pages = 1, trans = plogis,
shift = coef(model1)[1])
model2 <- gam(BWpresence ~ s(TOL_2000, by = as.factor(species)),
data = allDrifts, family = binomial, method = "REML")
plot(model2, pages = 1, trans = plogis,
shift = coef(model1)[1])
plot(model2, pages = 1, trans = plogis,
shift = coef(model2)[1])
summary(gam(BWpresence ~ depth + TOL_125 + dist2shore + mldTemp, data = allDrifts, family = binomial))
plot(model3)
model3 <- gam(BWpresence ~ depth + TOL_125 + dist2shore + mldTemp,
data = allDrifts, family = binomial)
plot(model3)
model3 <- gam(BWpresence ~ depth + TOL_125 + dist2shore + mldTemp,
data = allDrifts, family = binomial)
model3
model2 <- gam(BWpresence ~ s(sst_mean, by = as.factor(species)),
data = allDrifts, family = binomial, method = "REML")
plot(model2, pages = 1, trans = plogis,
shift = coef(model2)[1])
plot(model2, pages = 1)
gam.check(model2)
summary(model1)
model1 <- gam(BWpresence ~ s(BB_20.24000) + s(TOL_63) + s(TOL_125) + s(TOL_2000)
+ s(TOL_5000) + s(TOL_20000) + s(depth) + s(mldDepth) + s(Latitude)
+ s(Longitude) + s(sst_mean) + s(curl_mean) + s(dist2slope)
+ s(bathy_slope) + s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean)
+ s(mldTemp) + s(ttDepth) + s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
plot(model1, pages = 1)
#Log odds scale (when used with family = binomial)
plot(model1, pages = 6)
summary(model1)
#Probability scale + centered on the intercept + adding intercept-related uncertainty with seWithMean arg
plot(model1, pages = 8, trans = plogis,
shift = coef(model1)[1])#,
gam.check(model2)
gam.check(model1)
#Probability scale + centered on the intercept + adding intercept-related uncertainty with seWithMean arg
plot(model1, pages = 8, trans = plogis,
shift = coef(model1)[1])#,
#Probability scale + centered on the intercept + adding intercept-related uncertainty with seWithMean arg
plot(model1, pages = 14, trans = plogis,
shift = coef(model1)[1])#,
model4 <- gam(BWpresence ~ BB_20.24000 + TOL_63 + TOL_125 + TOL_2000
+ TOL_5000 + TOL_20000 + depth + mldDepth + Latitude
+ Longitude + sst_mean + curl_mean + dist2slope
+ bathy_slope + dist2shore + chlorophyll_mean + ssh_mean
+ mldTemp + ttDepth + ttTemp + temp400 + sal400,
data = allDrifts, family = binomial, method = "REML")
plot(model4, pages = 14, trans = plogis,
shift = coef(model4)[1])
model4 <- gam(BWpresence ~ BB_20.24000 + TOL_63 + TOL_125 + TOL_2000
+ TOL_5000 + TOL_20000 + depth + mldDepth + Latitude
+ Longitude + sst_mean + curl_mean + dist2slope
+ bathy_slope + dist2shore + chlorophyll_mean + ssh_mean
+ mldTemp + ttDepth + ttTemp + temp400 + sal400,
data = allDrifts, family = binomial, method = "REML")
model4
model4 <- gam(BWpresence ~ BB_20.24000 + TOL_63 + TOL_125 + TOL_2000
+ TOL_5000 + TOL_20000,
data = allDrifts, family = binomial, method = "REML")
summary(model4)
plot(model4, pages = 14, trans = plogis,
shift = coef(model4)[1])
plot(model4, pages = 1)
# Soundscape metrics only
model4 <- gam(BWpresence ~ s(BB_20.24000) + s(TOL_63) + s(TOL_125) + s(TOL_2000)
+ s(TOL_5000) + s(TOL_20000),
data = allDrifts, family = binomial, method = "REML")
summary(model4)
summary(model5)
model5 <- gam(BWpresence ~ s(depth) + s(mldDepth) + s(Latitude)
+ s(Longitude) + s(sst_mean) + s(curl_mean) + s(dist2slope)
+ s(bathy_slope) + s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean)
+ s(mldTemp) + s(ttDepth) + s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
summary(model5)
summary(model1)
summary(model4)
## code to prepare `soundscape` dataset goes here
library(tidyverse)
library(lubridate)
library(here)
# Path to folder in Project/on GitHub
sslist <- list.files(path = paste0("data-raw/"), pattern = "CCES_", recursive = TRUE)
# Path to folder on my external hard drive
dirlist <- dir("D:/Soundscape_metrics", recursive=TRUE, full.names=TRUE, pattern="CCES_")
# Read through soundscape files, change date format
for (i in sslist) {
data <- read_csv(here(paste0("data-raw/", i)), show_col_types = FALSE) %>%
rename(dateTime = `yyyy-mm-ddTHH:MM:SSZ`) %>%
mutate(dateTime = round_date(ymd_hms(dateTime), "20 minutes")) %>%
mutate(variable = paste0(substr(i, 16, 17), substr(i, 6, 7)))
assign(paste0(substr(i, 16, 17), "_", substr(i, 6, 7)), data)
}
# Read though files from external hard drive
for (i in dirlist) {
data <- read_csv(i, show_col_types = FALSE) %>%
rename(dateTime = `yyyy-mm-ddTHH:MM:SSZ`) %>%
mutate(dateTime = round_date(ymd_hms(dateTime), "20 minutes")) %>%
mutate(variable = paste0(substr(i, 38, 39), substr(i,28, 29)))
saveRDS(data, file = paste0("data/", substr(i, 38, 39), "_", substr(i, 28, 29), ".rda"))
}
# Creates BB_07, TO_07, BB_08, TO_08, etc. RDA files for each buoy
head)TO_08
head(TO_08)
## code to assemble clean dataframe for each buoy.
## Prerequisites include whales.R, tracks.R, soundscape_metrics.R.
# libraries ##########
library(tidyverse)
library(lubridate)
library(here)
# set up #####
# Set system time zone to UTC
Sys.setenv(TZ='UTC')
here()
######################
# Join TRACKS with WHALES (Start Rmd here)
######################
tracks <- readRDS('data/tracks.rda')
whales <- readRDS('data/whales.rda')
# Join tracks and whales
trk_whale <- left_join(tracks, whales, by = c("station","UTC"))
# Remove duplicates
trk_whale <- trk_whale[!duplicated(trk_whale[c('UTC', 'station')]),]
###############
# Filter whales by drift
##############
# Create list of drifts
d <- unique(trk_whale$station)
# Filter by drifts and assign to new variable
for (drift in d) {
assign(paste0("trk_whales", drift), trk_whale %>% dplyr::filter(station == drift))
}
# Results in trk_whales7, trk_whales8... objects
##############################################################
# Joining tracks with soundscape metrics with whale detections
##############################################################
## Make list of rda files to read in
iilist <- c("BB_07", "BB_08", "BB_10", "BB_12", "BB_13", "BB_14", "BB_16",
"BB_18", "BB_19", "BB_20", "BB_21", "BB_22", "BB_23", "TO_07",
"TO_08", "TO_10", "TO_12", "TO_13", "TO_14", "TO_16", "TO_18",
"TO_19", "TO_20", "TO_21", "TO_22", "TO_23")
## Read in rda files and assign to object
for (ii in iilist) {
dta <- readRDS(paste0('data/', ii, '.rda'))
assign(ii, dta)
}
# Make function to join whales + tracks, broadband, and TOL soundscape metrics and edit columns
joinTable <- function(w, s, t) {
left_join(w, s, by = join_by(closest("UTC" <= "dateTime"))) %>%     # join tracks with broadband metrics
.[!duplicated(.['UTC']),] %>%                                     # removes duplicates
left_join(., t, by = join_by(closest("UTC" <= "dateTime"))) %>%    # joins tracks/BB with TOL metrics
.[!duplicated(.['UTC']),] %>%                                     # removes duplicates formed from new join
mutate(Wpresence = if_else(is.na(nClicks), 0, 1)) %>%    # Add column to specify whale presence (1) or absence (0)
dplyr::select(UTC, spotID, Latitude, Longitude, station,
`BB_20-24000`,TOL_63, TOL_125, TOL_2000, TOL_3150,
TOL_5000, TOL_8000, TOL_12500,
TOL_20000, species, Wpresence)
}
# join whales detections + soundscape metrics (BB and TO) to each buoy track
# How can I loop this?
tracks_SS_07 <- joinTable(trk_whales7, BB_07, TO_07)
tracks_SS_08 <- joinTable(trk_whales8, BB_08, TO_08)
tracks_SS_10 <- joinTable(trk_whales10, BB_10, TO_10)
tracks_SS_12 <- joinTable(trk_whales12, BB_12, TO_12)
tracks_SS_13 <- joinTable(trk_whales13, BB_13, TO_13)
tracks_SS_14 <- joinTable(trk_whales14, BB_14, TO_14)
tracks_SS_16 <- joinTable(trk_whales16, BB_16, TO_16)
tracks_SS_18 <- joinTable(trk_whales18, BB_18, TO_18)
tracks_SS_19 <- joinTable(trk_whales19, BB_19, TO_19)
tracks_SS_20 <- joinTable(trk_whales20, BB_20, TO_20)
tracks_SS_21 <- joinTable(trk_whales21, BB_21, TO_21)
tracks_SS_22 <- joinTable(trk_whales22, BB_22, TO_22)
tracks_SS_23 <- joinTable(trk_whales23, BB_23, TO_23)
plot(model4, pages = 14, trans = plogis,
shift = coef(model4)[1])
## code to assemble clean dataframe for each buoy.
## Prerequisites include whales.R, tracks.R, soundscape_metrics.R.
# libraries ##########
library(tidyverse)
library(lubridate)
library(here)
# set up #####
# Set system time zone to UTC
Sys.setenv(TZ='UTC')
here()
######################
# Join TRACKS with WHALES (Start Rmd here)
######################
tracks <- readRDS('data/tracks.rda')
whales <- readRDS('data/whales.rda')
# Join tracks and whales
trk_whale <- left_join(tracks, whales, by = c("station","UTC"))
# Remove duplicates
trk_whale <- trk_whale[!duplicated(trk_whale[c('UTC', 'station')]),]
###############
# Filter whales by drift
##############
# Create list of drifts
d <- unique(trk_whale$station)
# Filter by drifts and assign to new variable
for (drift in d) {
assign(paste0("trk_whales", drift), trk_whale %>% dplyr::filter(station == drift))
}
# Results in trk_whales7, trk_whales8... objects
##############################################################
# Joining tracks with soundscape metrics with whale detections
##############################################################
## Make list of rda files to read in
iilist <- c("BB_07", "BB_08", "BB_10", "BB_12", "BB_13", "BB_14", "BB_16",
"BB_18", "BB_19", "BB_20", "BB_21", "BB_22", "BB_23", "TO_07",
"TO_08", "TO_10", "TO_12", "TO_13", "TO_14", "TO_16", "TO_18",
"TO_19", "TO_20", "TO_21", "TO_22", "TO_23")
## Read in rda files and assign to object
for (ii in iilist) {
dta <- readRDS(paste0('data/', ii, '.rda'))
assign(ii, dta)
}
# Make function to join whales + tracks, broadband, and TOL soundscape metrics and edit columns
joinTable <- function(w, s, t) {
left_join(w, s, by = join_by(closest("UTC" <= "dateTime"))) %>%     # join tracks with broadband metrics
.[!duplicated(.['UTC']),] %>%                                     # removes duplicates
left_join(., t, by = join_by(closest("UTC" <= "dateTime"))) %>%    # joins tracks/BB with TOL metrics
.[!duplicated(.['UTC']),] %>%                                     # removes duplicates formed from new join
mutate(Wpresence = if_else(is.na(nClicks), 0, 1)) %>%    # Add column to specify whale presence (1) or absence (0)
dplyr::select(UTC, spotID, Latitude, Longitude, station,
`BB_20-24000`,TOL_63, TOL_125, TOL_1600,
TOL_2000, TOL_3150, TOL_5000, TOL_8000, TOL_12500,
TOL_20000, species, Wpresence)
}
# join whales detections + soundscape metrics (BB and TO) to each buoy track
# How can I loop this?
tracks_SS_07 <- joinTable(trk_whales7, BB_07, TO_07)
tracks_SS_08 <- joinTable(trk_whales8, BB_08, TO_08)
tracks_SS_10 <- joinTable(trk_whales10, BB_10, TO_10)
tracks_SS_12 <- joinTable(trk_whales12, BB_12, TO_12)
tracks_SS_13 <- joinTable(trk_whales13, BB_13, TO_13)
tracks_SS_14 <- joinTable(trk_whales14, BB_14, TO_14)
tracks_SS_16 <- joinTable(trk_whales16, BB_16, TO_16)
tracks_SS_18 <- joinTable(trk_whales18, BB_18, TO_18)
tracks_SS_19 <- joinTable(trk_whales19, BB_19, TO_19)
tracks_SS_20 <- joinTable(trk_whales20, BB_20, TO_20)
tracks_SS_21 <- joinTable(trk_whales21, BB_21, TO_21)
tracks_SS_22 <- joinTable(trk_whales22, BB_22, TO_22)
tracks_SS_23 <- joinTable(trk_whales23, BB_23, TO_23)
modelBB <- gam(BWpresence ~ s(BB_20.24000),
data = allDrifts, family = binomial, method = "REML")
plot(modelBB)
summary(modelBB)
model2000 <- gam(BWpresence ~ s(TOL_2000),
data = allDrifts, family = binomial, method = "REML")
summary(model2000)
plot(model2000)
plot(model2000, trans = plogis)
model20000 <- gam(BWpresence ~ s(TOL_20000),
data = allDrifts, family = binomial, method = "REML")
plot(model20000, trans = plogis)
model125 <- gam(BWpresence ~ s(TOL_125),
data = allDrifts, family = binomial, method = "REML")
plot(model125, trans = plogis)
plot(model4, pages = 1)
plot(model4, pages = 2, trans = plogis)
plot(model4, pages = 4, trans = plogis)
model125 <- gam((BWpresence > 0) ~ s(TOL_125),
data = allDrifts, family = binomial, method = "REML")
plot(model125, trans = plogis)
model125 <- glm((BWpresence > 0) ~ s(TOL_125),
data = allDrifts, family = binomial, method = "REML")
model125 <- glm((BWpresence > 0) ~ TOL_125,
data = allDrifts, family = binomial, method = "REML")
model125 <- gam(BWpresence ~ s(TOL_125, k = 100),
data = allDrifts, family = binomial, method = "REML")
plot(model125, trans = plogis)
summary(model125)
gam.check(model125)
model125 <- gam(BWpresence ~ s(TOL_125, k = 10),
data = allDrifts, family = binomial, method = "REML")
plot(model125, trans = plogis)
gam.check(model125)
summary(model4)
gam.check(model4)
# Soundscape metrics only
model4 <- gam(BWpresence ~ s(BB_20.24000, k = 4) +
s(TOL_63, k = 4) + s(TOL_125, k = 4) +
s(TOL_2000, k = 4)
+ s(TOL_5000, k = 4) + s(TOL_20000, k = 4),
data = allDrifts, family = binomial, method = "REML")
gam.check(model4)
# Soundscape metrics only
model4 <- gam(BWpresence ~ s(BB_20.24000, k = 10) +
s(TOL_63, k = 10) + s(TOL_125, k = 10) +
s(TOL_2000, k = 10) + s(TOL_5000, k = 10)
+ s(TOL_20000, k = 10),
data = allDrifts, family = binomial, method = "REML")
gam.check(model4)
plot(model4, pages = 4, trans = plogis)
model125 <- gam(BWpresence ~ s(TOL_125, k = 10),
data = allDrifts, family = nb, method = "REML")
gam.check(model125)
plogis(coef(model1[1]))
summary(model1)
gam.check(model4)
summary(model4)
plot(model4, pages = 6, trans = plogis,
shift = coef(model4)[1])
model1GLM <- glm(BWpresence ~ BB_20.24000 + TOL_63 + TOL_125 + TOL_2000
+ TOL_5000 + TOL_20000 + depth + mldDepth + Latitude
+ Longitude + sst_mean + curl_mean + dist2slope
+ bathy_slope + dist2shore + chlorophyll_mean + ssh_mean
+ mldTemp + ttDepth + ttTemp + temp400 + sal400,
data = allDrifts, family = binomial)
summary(model1GLM)
# Soundscape metrics only, GLM
model4GLM <- glm(BWpresence ~ BB_20.24000 + TOL_63 + TOL_125 + TOL_2000
+ TOL_5000 + TOL_20000,
data = allDrifts, family = binomial)
summary(model4GLM)
plot(model4GLM)
plot(BWpresence~depth)
plot(allDrifts$BWpresence~allDrifts$depth)
#Probability scale + centered on the intercept + adding intercept-related uncertainty with seWithMean arg
plot(model1, pages = 14, trans = plogis,
shift = coef(model1)[1])#,
#Probability scale + centered on the intercept + adding intercept-related uncertainty with seWithMean arg
plot(model1, pages = 14, trans = plogis,
shift = coef(model1)[1])#,
# ALL variables, GAM
model1 <- gam(BWpresence>0 ~ s(BB_20.24000) + s(TOL_63) + s(TOL_125) + s(TOL_2000)
+ s(TOL_5000) + s(TOL_20000) + s(depth) + s(mldDepth) + s(Latitude)
+ s(Longitude) + s(sst_mean) + s(curl_mean) + s(dist2slope)
+ s(bathy_slope) + s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean)
+ s(mldTemp) + s(ttDepth) + s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
library(tidyverse)
library(mgcv)
summary(model1)
allDrifts
TOL_08
col(TOL_08)
colnames(TOL_08)
summary(model5)
