allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(`BB_20.24000`, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("Broadband ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_63, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 63 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# TOL 125 SINGLE PLOT ALL DRIFTS
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_125, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 125 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# TOL 2000 SINGLE PLOT ALL DRIFTS
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_2000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 2000 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_5000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 5000 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_20000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 20,000 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
ggplot(data = allDrifts, aes(x = sst_mean, y = `TOL_2000`)) +
geom_point(aes(color = species)) + scale_color_discrete(na.translate=FALSE)
ggplot(allDrifts, aes(x = UTC, y = sst_mean)) +
geom_line() +
geom_point(aes(color = species)) +
scale_color_discrete(na.translate=FALSE)
ggplot(data = allDrifts, aes(x = depth, y = `TOL_125`)) +
geom_line() +
geom_point(aes(color = species)) +
scale_color_discrete(na.translate=FALSE)
ggplot(data = allDrifts, aes(x = chlorophyll_mean, y = `TOL_125`)) +
geom_point(aes(color = species))
# Chlorophyll vs TOL 125
ggplot(data = allDrifts, aes(x = chlorophyll_mean, y = `TOL_125`)) +
geom_point(aes(color = species)) + scale_color_discrete(na.translate=FALSE)
ggplot(allDrifts, aes(x = UTC, y = chlorophyll_mean)) +
geom_line() +
geom_point(aes(color = species)) +
scale_color_discrete(na.translate=FALSE)
ggplot(data = allDrifts, aes(x = mldDepth, y = `TOL_125`)) +
geom_point(aes(color = species))
# Mixed Layer Depth vs TOL125 with species
ggplot(data = allDrifts, aes(x = mldDepth, y = `TOL_125`)) +
geom_point(aes(color = species)) + scale_color_discrete(na.translate=FALSE)
ggplot(data = allDrifts, aes(x = slope, y = `TOL_5000`)) +
geom_point(aes(color = species))
head(allDrifts)
ggplot(data = allDrifts, aes(x = bathy_slope, y = `TOL_5000`)) +
geom_point(aes(color = species))
ggplot(data = allDrifts, aes(x = bathy_slope, y = `TOL_5000`)) +
geom_point(aes(color = species)) + scale_color_discrete(na.translate=FALSE)
ggplot(data = allDrifts, aes(x = bathy_slope, y = `TOL_125`)) +
geom_point(aes(color = species)) + scale_color_discrete(na.translate=FALSE)
ggplot(data = allDrifts, aes(x = `TOL_125`, y = bathy_slope)) +
geom_point(aes(color = species)) + scale_color_discrete(na.translate=FALSE)
# Mixed Layer Depth over time
ggplot(allDrifts, aes(x = UTC, y = mldDepth*(-1))) +
geom_line() +
geom_point(aes(color = species)) +
scale_color_discrete(na.translate=FALSE)
ggplot(data = allDrifts, aes(x = UTC, y = station))
ggplot(data = allDrifts, aes(x = UTC, y = station)) + geom_point()
ggplot(data = allDrifts, aes(x = UTC, y = station*(-1))) + geom_point(aes (color = station))
ggplot(data = allDrifts, aes(x = UTC, y = station*(-1))) + geom_point(aes(color = factor(station))
ggplot(data = allDrifts, aes(x = UTC, y = station*(-1))) + geom_point(aes(color = factor(station)))
ggplot(data = allDrifts, aes(x = UTC, y = station*(-1))) + geom_point(aes(color = factor(station)))
View(fulltrack20)
ggplot(data = allDrifts, aes(x = UTC, y = station*(-1))) + geom_point(aes(color = factor(station)))
#Get avg daily environmental variables
means <- allDrifts %>%
group_by(as.Date(UTC))%>%
summarize(sst_mean = mean(sst_mean),
dist_slope = mean(dist2slope),
depth = mean(depth),
slope = mean(bathy_slope),
dist_shore = mean(dist2shore),
chlorophyll_mean = mean(chlorophyll_mean),
ssh_mean = mean(ssh_mean),
mldDepth = mean(mldDepth),
mldTemp = mean(mldTemp),
ttDepth = mean(ttDepth),
ttTemp = mean(ttTemp),
temp400 = mean(temp400),
sal400 = mean(sal400),
curlmean = mean(curl_mean),
BWpresence = sum(Wpresence))
#Get avg daily environmental variables
means <- allDrifts %>%
group_by(as.Date(UTC))%>%
summarize(sst_mean = mean(sst_mean),
dist_slope = mean(dist2slope),
depth = mean(depth),
slope = mean(bathy_slope),
dist_shore = mean(dist2shore),
chlorophyll_mean = mean(chlorophyll_mean),
ssh_mean = mean(ssh_mean),
mldDepth = mean(mldDepth),
mldTemp = mean(mldTemp),
ttDepth = mean(ttDepth),
ttTemp = mean(ttTemp),
temp400 = mean(temp400),
sal400 = mean(sal400),
curlmean = mean(curl_mean),
Wh_presence = sum(BWpresence))
trackLong <- means %>%
pivot_longer(cols = sst_mean:ssh_mean,
names_to="parameter",
values_to="value") %>%
filter(parameter %in% c("sst_mean", "dist_shore", "chlorophyll_mean", "ssh_mean")) %>%
rename(Date = `as.Date(UTC)`)
p <- ggplot(data = trackLong, aes(x = Date, y = value)) +
geom_line()
# geom_point(aes(size = BWpresence))   ### How best to represent number of BW detections per day?
p + facet_grid(parameter ~ ., scales = "free_y")
trackLong2 <- allDrifts %>%
pivot_longer(cols = mldDepth:sal400,
names_to="parameter",
values_to="value") %>%
filter(parameter %in% c("mldDepth", "mldTemp", "ttDepth", "ttTemp", "temp400", "sal400")) %>%
rename(Date = UTC) %>%
subset(species!="?BW")
q <- ggplot(data = trackLong2, aes(x = Date, y = value)) +
geom_line() + geom_point(aes(color = species)) + scale_color_discrete(na.translate=FALSE)
q + facet_grid(parameter ~ ., scales = "free_y")
env.labs <- c(`sal400` = "Salinity at 400m",
`temp400` = "Temperature at 400m")
trackLong3 <- allDrifts %>%
pivot_longer(cols = temp400:sal400,
names_to="parameter",
values_to="value") %>%
filter(parameter %in% c("temp400", "sal400")) %>%
rename(`Date (2018)` = UTC)
q <- ggplot(data = trackLong3, aes(x = `Date (2018)`, y = value)) +
geom_line() +
geom_point(aes(color = species)) +
scale_color_discrete(na.translate=FALSE, labels = c("ZC" = "Cuvier's", "BW43" = "BW43", "BW" = "BW"))
q + facet_grid(parameter ~ ., scales = "free_y", labeller = as_labeller(env.labs))
q <- ggplot(data = trackLong3, aes(x = `Date (2018)`, y = value)) +
#geom_line() +
geom_point(aes(color = species)) +
scale_color_discrete(na.translate=FALSE, labels = c("ZC" = "Cuvier's", "BW43" = "BW43", "BW" = "BW"))
q + facet_grid(parameter ~ ., scales = "free_y", labeller = as_labeller(env.labs))
ggplot(data = allDrifts, aes(sst_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
# Depth
ggplot(data = allDrifts, aes(depth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 10, color = "black")
# Bottom slope
ggplot(data = allDrifts, aes(slope, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Bottom slope
ggplot(data = allDrifts, aes(bathy_slope, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# SSH
ggplot(data = allDrifts, aes(ssh_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Chlorophyll
ggplot(data = allDrifts, aes(chlorophyll_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Mixed layer depth Depth
ggplot(data = allDrifts, aes(mldDepth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.25, color = "black")
#Wind Curl
ggplot(data = allDrifts, aes(curl_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
#Wind Curl
ggplot(data = allDrifts, aes(curl_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.5, color = "black")
#Wind Curl
ggplot(data = allDrifts, aes(curl_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.0005, color = "black")
#Wind Curl
ggplot(data = allDrifts, aes(curl_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.0000005, color = "black")
# Mixed layer depth Temperature
ggplot(data = allDrifts, aes(mldTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
# Thermocline Depth
ggplot(data = allDrifts, aes(ttDepth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.25, color = "black")
#Thermocline temperature
ggplot(data = tracks_SS_08, aes(ttTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Thermocline Depth
ggplot(data = allDrifts, aes(ttDepth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.5, color = "black")
# Thermocline Depth
ggplot(data = allDrifts, aes(ttDepth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.75, color = "black")
#Thermocline temperature
ggplot(data = allDrifts, aes(ttTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.05, color = "black")
#Thermocline temperature
ggplot(data = allDrifts, aes(ttTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
# Temperature at 400m
ggplot(data = allDrifts, aes(temp400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.01, color = "black")
#Thermocline temperature
ggplot(data = allDrifts, aes(ttTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.3, color = "black")
#Thermocline temperature
ggplot(data = allDrifts, aes(ttTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.2, color = "black")
#Thermocline temperature
ggplot(data = allDrifts, aes(ttTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.15, color = "black")
#Thermocline temperature
ggplot(data = allDrifts, aes(ttTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
# Temperature at 400m
ggplot(data = allDrifts, aes(temp400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.01, color = "black")
# Temperature at 400m
ggplot(data = allDrifts, aes(temp400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.05, color = "black")
# Temperature at 400m
ggplot(data = allDrifts, aes(temp400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.03, color = "black")
# Salinity at 400 m
ggplot(data = allDrifts, aes(sal400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.001, color = "black")
# Salinity at 400 m
ggplot(data = allDrifts, aes(sal400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.00001, color = "black")
# Salinity at 400 m
ggplot(data = allDrifts, aes(sal400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.01, color = "black")
# Salinity at 400 m
ggplot(data = allDrifts, aes(sal400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.001, color = "black")
# Salinity at 400 m
ggplot(data = allDrifts, aes(sal400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.02, color = "black")
# Salinity at 400 m
ggplot(data = allDrifts, aes(sal400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.01, color = "black")
# Salinity at 400 m
ggplot(data = allDrifts, aes(sal400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Depth
ggplot(data = allDrifts, aes(depth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 10, color = "black")
# Depth
ggplot(data = allDrifts, aes(depth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 1, color = "black")
# Depth
ggplot(data = allDrifts, aes(depth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
# Depth
ggplot(data = allDrifts, aes(depth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 100, color = "black")
# Bottom slope
ggplot(data = allDrifts, aes(bathy_slope, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Bottom slope
ggplot(data = allDrifts, aes(bathy_slope, fill = factor(BWpresence))) +
geom_histogram(binwidth = 5, color = "black")
# Bottom slope
ggplot(data = allDrifts, aes(bathy_slope, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.5, color = "black")
# Bottom slope
ggplot(data = allDrifts, aes(bathy_slope, fill = factor(BWpresence))) +
geom_histogram(binwidth = 1, color = "black")
# SSH
ggplot(data = allDrifts, aes(ssh_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Chlorophyll
ggplot(data = allDrifts, aes(chlorophyll_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Chlorophyll
ggplot(data = allDrifts, aes(chlorophyll_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.05, color = "black")
#Wind Curl
ggplot(data = allDrifts, aes(curl_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.0000005, color = "black")
#Wind Curl
ggplot(data = allDrifts, aes(curl_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.00000005, color = "black")
#Wind Curl
ggplot(data = allDrifts, aes(curl_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.0000005, color = "black")
# Mixed layer depth Temperature
ggplot(data = allDrifts, aes(mldTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
allDrifts %>%
filter(!is.na(species)) %>%
ggplot() + geom_bar(aes(species))
ZC <- allDrifts %>%
filter(species == "ZC")
BW43 <- allDrifts %>%
filter(species == "BW43")
BB <- allDrifts %>%
filter(species == "BB")
BWC <- allDrifts %>%
filter(species == "BWC")
BW37V <- allDrifts %>%
filter(species == "BW37V")
PM <- allDrifts %>%
filter(species == "PM")
print(max(ZC$TOL_125))
print(max(BW43$TOL_125))
print(max(BB$TOL_125))
print(max(BWC$TOL_125))
print(max(BW37V$TOL_125))
print(max(PM$TOL_125))
# Most abundant BW species when whale is detected (remove NA values)
allDrifts %>%
filter(!is.na(species)) %>%
ggplot() + geom_bar(aes(species))
print(max(ZC$TOL_125))
ZC
max(ZC$TOL_125)
max(ZC$TOL_125)
min((ZC($TOL_125)))
min(ZC$TOL_125)
max(ZC$TOL_125)
print(max(BW43$TOL_125))
print(max(BB$TOL_125))
print(max(BWC$TOL_125))
print(max(BW37V$TOL_125))
print(max(PM$TOL_125))
View(allDrifts)
View(ZC)
View(fulltrack12)
print(max(ZC$TOL_125))
print(max(BW43$TOL_125))
print(max(BB$TOL_125))
print(max(BWC$TOL_125))
print(max(BW37V$TOL_125))
print(max(PM$TOL_125))
## code to prepare `soundscape` dataset goes here
library(tidyverse)
library(lubridate)
# Path to folder in Project/on GitHub
sslist <- list.files(path = paste0("data-raw/"), pattern = "CCES_", recursive = TRUE)
# Path to folder on my external hard drive
dirlist <- dir("D:/Soundscape_metrics", recursive=TRUE, full.names=TRUE, pattern="CCES_")
# Read through soundscape files, change date format
for (i in sslist) {
data <- read_csv(here(paste0("data-raw/", i)), show_col_types = FALSE) %>%
rename(dateTime = `yyyy-mm-ddTHH:MM:SSZ`) %>%
mutate(dateTime = round_date(ymd_hms(dateTime), "20 minutes")) %>%
mutate(variable = paste0(substr(i, 16, 17), substr(i, 6, 7)))
assign(paste0(substr(i, 16, 17), "_", substr(i, 6, 7)), data)
}
## code to prepare `soundscape` dataset goes here
library(tidyverse)
library(lubridate)
library(here)
# Path to folder in Project/on GitHub
sslist <- list.files(path = paste0("data-raw/"), pattern = "CCES_", recursive = TRUE)
# Path to folder on my external hard drive
dirlist <- dir("D:/Soundscape_metrics", recursive=TRUE, full.names=TRUE, pattern="CCES_")
# Read through soundscape files, change date format
for (i in sslist) {
data <- read_csv(here(paste0("data-raw/", i)), show_col_types = FALSE) %>%
rename(dateTime = `yyyy-mm-ddTHH:MM:SSZ`) %>%
mutate(dateTime = round_date(ymd_hms(dateTime), "20 minutes")) %>%
mutate(variable = paste0(substr(i, 16, 17), substr(i, 6, 7)))
assign(paste0(substr(i, 16, 17), "_", substr(i, 6, 7)), data)
}
# Read though files from external hard drive
for (i in dirlist) {
data <- read_csv(i, show_col_types = FALSE) %>%
rename(dateTime = `yyyy-mm-ddTHH:MM:SSZ`) %>%
mutate(dateTime = round_date(ymd_hms(dateTime), "20 minutes")) %>%
mutate(variable = paste0(substr(i, 38, 39), substr(i,28, 29)))
saveRDS(data, file = paste0("data/", substr(i, 38, 39), "_", substr(i, 28, 29), ".rda"))
}
# Creates BB_07, TO_07, BB_08, TO_08, etc. RDA files for each buoy
View(TO_12)
iilist <- c("BB_07", "BB_08", "BB_10", "BB_12", "BB_13", "BB_14", "BB_16",
"BB_18", "BB_19", "BB_20", "BB_21", "BB_22", "BB_23", "TO_07",
"TO_08", "TO_10", "TO_12", "TO_13", "TO_14", "TO_16", "TO_18",
"TO_19", "TO_20", "TO_21", "TO_22", "TO_23")
## Read in rda files and assign to object
for (ii in iilist) {
dta <- readRDS(paste0('data/', ii, '.rda'))
assign(ii, dta)
}
View(TO_12)
View(allDrifts)
## code to prepare in `tracks` dataset goes here
library(tidyverse)
# Load raw rda file
load("data-raw/CCES2018_DriftTracks_Modified_03Nov2022.rda")
# Read in tracks, filter out lost buoys (1,2,3,5,6,9,11) and corrupted buoys (4,17)
tracks <- AllTracks %>%
dplyr::select(-dist, -speed) %>%
mutate(dateTime = round_date(.$dateTime, "20 minutes")) %>%      # round to nearest 20 minutes, will create duplicated in the data
filter(!station %in% c('1','2','3','4','5','6','9','11', '17')) %>%
rename(Longitude = long,                                 # Need these columns to specifically say this for ERDDAP matching
Latitude = lat,
UTC = dateTime)
tracks <- tracks[!duplicated(tracks[c('UTC', 'station')]),]    # Remove duplicates
# Save as RDS
saveRDS(tracks, 'data/tracks.rda')
# Filter by buoy
#tracks_08 <- tracks %>% dplyr::filter(station == "8")
track4 <- AllTracks %>% dplyr::filter(station == "4")
## code to assemble clean dataframe for each buoy.
## Prerequisites include whales.R, tracks.R, soundscape_metrics.R.
# libraries ##########
library(tidyverse)
library(lubridate)
library(here)
# set up #####
# Set system time zone to UTC
Sys.setenv(TZ='UTC')
here()
######################
# Join TRACKS with WHALES (Start Rmd here)
######################
tracks <- readRDS('data/tracks.rda')
whales <- readRDS('data/whales.rda')
# Join tracks and whales
trk_whale <- left_join(tracks, whales, by = c("station","UTC"))
# Remove duplicates
trk_whale <- trk_whale[!duplicated(trk_whale[c('UTC', 'station')]),]
###############
# Filter whales by drift
##############
# Create list of drifts
d <- unique(trk_whale$station)
# Filter by drifts and assign to new variable
for (drift in d) {
assign(paste0("trk_whales", drift), trk_whale %>% dplyr::filter(station == drift))
}
# Results in trk_whales7, trk_whales8... objects
##############################################################
# Joining tracks with soundscape metrics with whale detections
##############################################################
## Make list of rda files to read in
iilist <- c("BB_07", "BB_08", "BB_10", "BB_12", "BB_13", "BB_14", "BB_16",
"BB_18", "BB_19", "BB_20", "BB_21", "BB_22", "BB_23", "TO_07",
"TO_08", "TO_10", "TO_12", "TO_13", "TO_14", "TO_16", "TO_18",
"TO_19", "TO_20", "TO_21", "TO_22", "TO_23")
## Read in rda files and assign to object
for (ii in iilist) {
dta <- readRDS(paste0('data/', ii, '.rda'))
assign(ii, dta)
}
# Make function to join whales + tracks, broadband, and TOL soundscape metrics and edit columns
joinTable <- function(w, s, t) {
left_join(w, s, by = c("UTC" = "dateTime")) %>%   # join tracks with broadband metrics
.[!duplicated(.['UTC']),] %>%                   # removes duplicates
left_join(., t, by = c("UTC"= "dateTime")) %>%
.[!duplicated(.['UTC']),] %>%                   # removes duplicated again
mutate(BWpresence = if_else(is.na(nClicks), 0, 1)) %>%    # Add column to specify BW presence (1) or absence (0)
dplyr::select(UTC, spotID, Latitude, Longitude, station,
`BB_20-24000`,TOL_63, TOL_125, TOL_2000,
TOL_5000, TOL_20000, species, BWpresence)
}
# join whales detections + soundscape metrics (BB and TO) to each buoy track
# How can I loop this?
tracks_SS_07 <- joinTable(trk_whales7, BB_07, TO_07)
tracks_SS_08 <- joinTable(trk_whales8, BB_08, TO_08)
tracks_SS_10 <- joinTable(trk_whales10, BB_10, TO_10)
tracks_SS_12 <- joinTable(trk_whales12, BB_12, TO_12)
tracks_SS_13 <- joinTable(trk_whales13, BB_13, TO_13)
tracks_SS_14 <- joinTable(trk_whales14, BB_14, TO_14)
tracks_SS_16 <- joinTable(trk_whales16, BB_16, TO_16)
tracks_SS_18 <- joinTable(trk_whales18, BB_18, TO_18)
tracks_SS_19 <- joinTable(trk_whales19, BB_19, TO_19)
tracks_SS_20 <- joinTable(trk_whales20, BB_20, TO_20)
tracks_SS_21 <- joinTable(trk_whales21, BB_21, TO_21)
tracks_SS_22 <- joinTable(trk_whales22, BB_22, TO_22)
tracks_SS_23 <- joinTable(trk_whales23, BB_23, TO_23)
trk_whales12
View(trk_whales12)
View(tracks_SS_12)
whales$station
View(whales)
nrow(whales$station==12)
whales$station==12
whales[whales$station==12]
whales[whales$station==12,]
nrows(whales[whales$station==12,])
nrow(whales[whales$station==12,])
# Number of rows per station
nrow(whales[whales$station==12,])
nrow(trk_whales12[trk_whales12$station==12,])
View(trk_whales12)
View(allDrifts)
nrow(allDrifts[allDrifts$TOL_125==NA,])
nrow(allDrifts[allDrifts$TOL_125==NULL,])
nrow(allDrifts[allDrifts$TOL_125=="NA",])
