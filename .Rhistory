names_to="parameter",
values_to="value") %>%
filter(parameter %in% c("sst_mean", "dist_shore", "chlorophyll_mean", "ssh_mean")) %>%
rename(Date = `as.Date(UTC)`)
p <- ggplot(data = trackLong, aes(x = Date, y = value)) +
geom_line()
p + facet_grid(parameter ~ ., scales = "free_y")
# For MLD/Thermocline variables
trackLong2 <- allDrifts %>%
pivot_longer(cols = mldDepth:sal400,
names_to="parameter",
values_to="value") %>%
filter(parameter %in% c("mldDepth", "mldTemp", "ttDepth", "ttTemp", "temp400", "sal400")) %>%
rename(Date = UTC) %>%
subset(species!="?BW")
q <- ggplot(data = trackLong2, aes(x = Date, y = value)) +
geom_line() + geom_point(aes(color = species)) + scale_color_discrete(na.translate=FALSE)
q + facet_grid(parameter ~ ., scales = "free_y")
# For temp400 and salinity400 variables
env.labs <- c(`sal400` = "Salinity at 400m",
`temp400` = "Temperature at 400m")
trackLong3 <- allDrifts %>%
pivot_longer(cols = temp400:sal400,
names_to="parameter",
values_to="value") %>%
filter(parameter %in% c("temp400", "sal400")) %>%
rename(`Date (2018)` = UTC)
q <- ggplot(data = trackLong3, aes(x = `Date (2018)`, y = value)) +
#geom_line() +
geom_point(aes(color = species)) +
scale_color_discrete(na.translate=FALSE, labels = c("ZC" = "Cuvier's", "BW43" = "BW43", "BW" = "BW"))
q + facet_grid(parameter ~ ., scales = "free_y", labeller = as_labeller(env.labs))
#### 09/04/18 co-occurrence of vessel and drift within 10 km
track08_09.04 <- tracks_SS_08 %>%
filter(UTC >= "2018-09-04 00:00:00" & UTC <= "2018-09-05 00:00:00")
ggplot(data = track08_09.04, aes(x = UTC, y = `TOL_125`)) +
geom_vline(xintercept = as.POSIXct("2018-09-04 14:13:00"), color = "yellow", linewidth = 2) +
geom_text(aes(as.POSIXct("2018-09-04 14:13:00"), 88, label = "Enter vessel", hjust = 1.0)) +
geom_vline(xintercept = as.POSIXct("2018-09-04 15:17:00"), color = "yellow", linewidth = 2) +
geom_text(aes(as.POSIXct("2018-09-04 15:13:00"), 87, label = "Exit vessel", hjust = -0.1)) +
geom_line() +
geom_point(data = track08_09.04, aes(color = species, size = 2)) +
scale_color_discrete(na.translate=FALSE) +
scale_size_continuous(guide = "none") +
ggtitle("Sound levels during co-occurrence of Drift 8 and a vessel on 09-04-18\n(Within 7 km)") +
scale_y_continuous(name = "Sound Intensity (dB) at TOL 125 Hz") +
scale_color_discrete(na.translate=FALSE, labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
#### 09/05/18 co-occurrence of vessel and drift within 10 km.
track08_09.05 <- tracks_SS_08 %>%
filter(UTC >= "2018-09-04 21:00:00" & UTC <= "2018-09-06 00:00:00")
ggplot(data = track08_09.05, aes(x = UTC, y = `TOL_125`)) +
geom_vline(xintercept = as.POSIXct("2018-09-05 01:33:00"), color = "yellow", linewidth = 1) +
geom_text(aes(as.POSIXct("2018-09-05 01:33:00"), 86, label = "Enter vessel", hjust = 1)) +
geom_vline(xintercept = as.POSIXct("2018-09-05 02:08:00"), color = "yellow", linewidth = 1) +
geom_text(aes(as.POSIXct("2018-09-05 02:08:00"), 85, label = "Exit vessel", hjust = -0.1)) +
geom_line() +
geom_point(data = track08_09.05, aes(color = species, size = 2)) +
scale_size_continuous(guide = "none") +
ggtitle("Sound levels during co-occurrence of Drift 8 and a vessel on 09-05-18\n(Within 5 km)") +
scale_y_continuous(name = "Sound Intensity (dB) at TOL 125 Hz") +
scale_color_discrete(na.translate=FALSE, labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
#### 09/10/18 co-occurrence of vessel and drift within 10 km.
track08_09.10 <- tracks_SS_08 %>%
filter(UTC >= "2018-09-10 00:00:00" & UTC <= "2018-09-11 00:00:00")
ggplot(data = track08_09.10, aes(x = UTC, y = `TOL_125`)) +
geom_vline(xintercept = as.POSIXct("2018-09-10 12:58:00"), color = "yellow", linewidth = 1) +
geom_text(aes(as.POSIXct("2018-09-10 12:58:00"), 86, label = "Enter vessel", hjust = 1)) +
geom_vline(xintercept = as.POSIXct("2018-09-10 14:01:00"), color = "yellow", linewidth = 1) +
geom_text(aes(as.POSIXct("2018-09-10 14:01:00"), 85, label = "Exit vessel", hjust = -0.1)) +
geom_line() +
geom_point(data = track08_09.10, aes(color = species, size = 2)) +
scale_size_continuous(guide = "none") +
ggtitle("Sound levels during co-occurrence of Drift 8 and a vessel on 09-10-18\n(Within 2 km)") +
scale_y_continuous(name = "Sound Intensity (dB) at TOL 125 Hz") +
scale_color_discrete(na.translate=FALSE, labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
#### 09/22/18 co-occurrence of vessel and drift within 10 km
track08_09.22 <- tracks_SS_08 %>%
filter(UTC >= "2018-09-22 00:00:00" & UTC <= "2018-09-23 00:00:00")
ggplot(data = track08_09.22, aes(x = UTC, y = `TOL_125`)) +
geom_vline(xintercept = as.POSIXct("2018-09-22 19:13:00"), color = "yellow", linewidth = 1) +
geom_text(aes(as.POSIXct("2018-09-22 19:13:00"), 86, label = "Enter vessel", hjust = 1)) +
geom_vline(xintercept = as.POSIXct("2018-09-22 19:34:00"), color = "yellow", linewidth = 1) +
geom_text(aes(as.POSIXct("2018-09-22 19:34:00"), 85, label = "Exit vessel", hjust = -0.1)) +
geom_line() +
geom_point(data = track08_09.22, aes(color = species, size = 2)) +
scale_size_continuous(guide = "none") +
ggtitle("Sound levels during co-occurrence of Drift 8 and a vessel on 09-22-18\n(Within 9 km)") +
scale_y_continuous(name = "Sound Intensity (dB) at TOL 125 Hz") +
scale_color_discrete(na.translate=FALSE, labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
#### 09/23/18 co-occurrence of vessel and drift within 10 km. NO whale detections in this time period.
track08_09.23 <- tracks_SS_08 %>%
filter(UTC >= "2018-09-23 00:00:00" & UTC <= "2018-09-24 00:00:00")
ggplot(data = track08_09.23, aes(x = UTC, y = `TOL_125`)) +
geom_vline(xintercept = as.POSIXct("2018-09-23 03:55:00"), color = "yellow", linewidth = 1) +
geom_text(aes(as.POSIXct("2018-09-23 03:55:00"), 86, label = "Enter vessel", hjust = 1)) +
geom_vline(xintercept = as.POSIXct("2018-09-23 04:23:00"), color = "yellow", linewidth = 1) +
geom_text(aes(as.POSIXct("2018-09-23 04:23:00"), 85, label = "Exit vessel", hjust = -0.1)) +
geom_line() +
ggtitle("Sound levels during co-occurrence of Drift 8 and a vessel on 09-23-18\n(Within 6 km)") +
scale_y_continuous(name = "Sound Intensity (dB) at TOL 125 Hz") +
scale_color_discrete(na.translate=FALSE, labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# Filter Drift 8 by Whale presence and absence
W1 <- tracks_SS_08 %>%
filter(Wpresence == 1)
W0 <- tracks_SS_08 %>%
filter(Wpresence == 0)
ggplot(data = tracks_SS_08, mapping = aes(TOL_125)) + geom_histogram(binwidth = 0.1, color = "black")
ggplot() +
geom_histogram(data = W0, aes(TOL_5000), binwidth = 0.5, fill = "black", color = "white") +
geom_histogram(data = W1, aes(TOL_5000), binwidth = 0.5, fill = "yellow", color = "black")
# Percent of time BWs are detected
print(paste(nrow(W1) / nrow(tracks_SS_08) * 100,"%"))
# Most abundant whale species when whale is detected (remove NA values)
allDrifts %>%
filter(!is.na(species)) %>%
ggplot() + geom_bar(aes(species))
# Sound levels whales are exposed to by species
ZC <- allDrifts %>%
filter(species == "ZC")
BW43 <- allDrifts %>%
filter(species == "BW43")
BB <- allDrifts %>%
filter(species == "BB")
BWC <- allDrifts %>%
filter(species == "BWC")
BW37V <- allDrifts %>%
filter(species == "BW37V")
PM <- allDrifts %>%
filter(species == "PM")
print(max(ZC$TOL_125))
print(max(BW43$TOL_125))
print(max(BB$TOL_125))
print(max(BWC$TOL_125))
print(max(BW37V$TOL_125))
print(max(PM$TOL_125))
ggplot() + geom_histogram(data = ZC, mapping = aes(TOL_125), binwidth = 0.2, fill = "brown", color = "white") +
geom_histogram(data = BW43, mapping = aes(TOL_125), binwidth = 0.2, fill = "yellow", color = "white") +
theme_classic()
# Broadband
for (ft in dlist) {
plt <- get(ft) %>%
filter(!is.na(species))
print(ggplot(data = plt, aes(`BB_20.24000`, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle(paste0("Broadband Drift ", substr(ft, 10, 11))) +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43")))
}
# Broadband SINGLE PLOT ALL DRIFTS
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(`BB_20.24000`, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("Broadband ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# TOL 63
for (ft in dlist) {
plt <- get(ft) %>%
filter(!is.na(species))
print(ggplot(data = plt, aes(TOL_63, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle(paste0("TOL 63, Drift ", substr(ft, 10, 11))) +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43")))
}
# TOL 63 SINGLE PLOT ALL DRIFTS
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_63, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 63 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# TOL 125
for (ft in dlist) {
plt <- get(ft) %>%
filter(!is.na(species))
print(ggplot(data = plt, aes(TOL_125, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle(paste0("TOL 125, Drift ", substr(ft, 10, 11))) +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43")))
}
# TOL 125 SINGLE PLOT ALL DRIFTS
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_125, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 125 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# TOL 2000
for (ft in dlist) {
plt <- get(ft) %>%
filter(!is.na(species))
print(ggplot(data = plt, aes(TOL_2000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle(paste0("TOL 2000, Drift ", substr(ft, 10, 11))) +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43")))
}
# TOL 2000 SINGLE PLOT ALL DRIFTS
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_2000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 2000 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# TOL 5000
for (ft in dlist) {
plt <- get(ft) %>%
filter(!is.na(species))
print(ggplot(data = plt, aes(TOL_5000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle(paste0("TOL 5000, Drift ", substr(ft, 10, 11))) +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43")))
}
# TOL 5000 SINGLE PLOT ALL DRIFTS
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_5000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 5000 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# TOL 20,000
for (ft in dlist) {
plt <- get(ft) %>%
filter(!is.na(species))
print(ggplot(data = plt, aes(TOL_20000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle(paste0("TOL 20000, Drift ", substr(ft, 10, 11))) +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43")))
}
# TOL 20,000 SINGLE PLOT ALL DRIFTS
allDrifts %>%
filter(!is.na(species)) %>%
ggplot(aes(TOL_20000, fill = species)) +
geom_density(alpha = 0.5) +
ggtitle("TOL 20,000 ALL Drifts Combined") +
scale_x_continuous(name = "Sound Intensity (dB)") +
scale_fill_discrete(labels = c("ZC" = "Cuvier's", "BW43" = "BW43"))
# SST
ggplot(data = allDrifts, aes(sst_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
# Depth
ggplot(data = allDrifts, aes(depth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 100, color = "black")
# Bottom slope
ggplot(data = allDrifts, aes(bathy_slope, fill = factor(BWpresence))) +
geom_histogram(binwidth = 1, color = "black")
# SSH
ggplot(data = allDrifts, aes(ssh_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
# Chlorophyll
ggplot(data = allDrifts, aes(chlorophyll_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.05, color = "black")
#Wind Curl
ggplot(data = allDrifts, aes(curl_mean, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.0000005, color = "black")
# Mixed layer depth Depth
ggplot(data = allDrifts, aes(mldDepth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.25, color = "black")
# Mixed layer depth Temperature
ggplot(data = allDrifts, aes(mldTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
# Thermocline Depth
ggplot(data = allDrifts, aes(ttDepth, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.75, color = "black")
#Thermocline temperature
ggplot(data = allDrifts, aes(ttTemp, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.1, color = "black")
# Temperature at 400m
ggplot(data = allDrifts, aes(temp400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.03, color = "black")
# Salinity at 400 m
ggplot(data = allDrifts, aes(sal400, fill = factor(BWpresence))) +
geom_histogram(binwidth = 0.005, color = "black")
model3 <- gam(BWpresence ~ depth + TOL_125 + dist2shore + mldTemp,
data = allDrifts, family = binomial)
plot(model3)
ggplot(data = pivot3, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle("Distribution of third octave level intensities: All Drifts Combined") +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
facet_grid(~SL, levels = c("BB_20.2400", "TOL_63", "TOL_125", "TOL_2000",
"TOL_5000", "TOL_20000"))
ggplot(data = pivot3, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle("Distribution of third octave level intensities: All Drifts Combined") +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
facet_grid(~SL, levels = c('BB_20.2400', 'TOL_63', 'TOL_125', 'TOL_2000',
'TOL_5000', 'TOL_20000'))
?facet_grid
ggplot(data = pivot3, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle("Distribution of third octave level intensities: All Drifts Combined") +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
facet_grid(factor(SL, levels = c('BB_20.2400', 'TOL_63', 'TOL_125', 'TOL_2000',
'TOL_5000', 'TOL_20000')))
ggplot(data = pivot3, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle("Distribution of third octave level intensities: All Drifts Combined") +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
facet_grid(factor(~SL, levels = c('BB_20.2400', 'TOL_63', 'TOL_125', 'TOL_2000',
'TOL_5000', 'TOL_20000')))
ggplot(data = pivot3, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle("Distribution of third octave level intensities: All Drifts Combined") +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
facet_grid(~factor(SL, levels = c('BB_20.2400', 'TOL_63', 'TOL_125', 'TOL_2000', 'TOL_5000', 'TOL_20000'))))
ggplot(data = pivot3, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle("Distribution of third octave level intensities: All Drifts Combined") +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
facet_grid(~factor(SL, levels = c('BB_20.2400', 'TOL_63', 'TOL_125', 'TOL_2000', 'TOL_5000', 'TOL_20000')))
ggplot(data = pivot3, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle("Distribution of third octave level intensities: All Drifts Combined") +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
facet_grid(~factor(SL, levels = c('BB_20.24000', 'TOL_63', 'TOL_125', 'TOL_2000', 'TOL_5000', 'TOL_20000')))
print(ggplot(data = pivot1, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle(paste0("Distribution of third octave level intensities: Drift ", substr(ft,10,11))) +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
(facet_grid(~factor(SL, levels = c('BB_20.24000', 'TOL_63', 'TOL_125', 'TOL_2000', 'TOL_5000', 'TOL_20000')))))
# create list of fulltrack dfs from global environment to loop through
dlist <- grep(pattern = "fulltrack", names(.GlobalEnv), value = T)
# all Drifts - all TOL bands, facet wrap
for (ft in dlist) {
pivot1 <- get(ft) %>%
pivot_longer(cols = starts_with("TOL") | starts_with("BB"), names_to = "SL", values_to = "Hz")    # Pivot longer for histogram facet grid
print(ggplot(data = pivot1, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle(paste0("Distribution of third octave level intensities: Drift ", substr(ft,10,11))) +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
(facet_grid(~factor(SL, levels = c('BB_20.24000', 'TOL_63', 'TOL_125', 'TOL_2000', 'TOL_5000', 'TOL_20000')))))
}
# Single plot for ALL DRIFTS
pivot3 <- allDrifts %>%
pivot_longer(cols = starts_with("TOL") | starts_with("BB"), names_to = "SL", values_to = "Hz")    # Pivot longer for histogram facet grid
#SL$size_f <- factor(SL$ , levels = c('BB_20.2400', 'TOL_63', 'TOL_125', 'TOL_2000', 'TOL_5000', 'TOL_20000'))))
ggplot(data = pivot3, aes(Hz, fill = factor(BWpresence))) +
geom_histogram(binwidth = 3, color = "black") +
theme_classic() +
ggtitle("Distribution of third octave level intensities: All Drifts Combined") +
labs(x = "Sound Intensity (dB)") +
guides(fill = guide_legend(title = "Whale Presence")) +
scale_fill_manual(values = c("0" = "bisque1",
"1" = "brown4")) +
theme(legend.position = c(0.7,0.8)) +
facet_grid(~factor(SL, levels = c('BB_20.24000', 'TOL_63', 'TOL_125', 'TOL_2000', 'TOL_5000', 'TOL_20000')))
model3 <- gam(BWpresence ~ depth + TOL_125 + dist2shore + mldTemp,
data = allDrifts, family = binomial)
plot(model3)
# ALL variables, GAM
model1 <- gam(BWpresence>0 ~ s(BB_20.24000) + s(TOL_63) + s(TOL_125) + s(TOL_2000)
+ s(TOL_5000) + s(TOL_20000) + s(depth) + s(mldDepth) + s(Latitude)
+ s(Longitude) + s(sst_mean) + s(curl_mean) + s(dist2slope)
+ s(bathy_slope) + s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean)
+ s(mldTemp) + s(ttDepth) + s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
# ALL variables, GLM
model1GLM <- glm(BWpresence ~ BB_20.24000 + TOL_63 + TOL_125 + TOL_2000
+ TOL_5000 + TOL_20000 + depth + mldDepth + Latitude
+ Longitude + sst_mean + curl_mean + dist2slope
+ bathy_slope + dist2shore + chlorophyll_mean + ssh_mean
+ mldTemp + ttDepth + ttTemp + temp400 + sal400,
data = allDrifts, family = binomial)
# By species? doesnt work, may need to create dummy variables
model2 <- gam(BWpresence ~ s(sst_mean, by = as.factor(species)),
data = allDrifts, family = binomial, method = "REML")
# Soundscape metrics only, GAM
model4 <- gam(BWpresence ~ s(BB_20.24000, k = 10) +
s(TOL_63, k = 10) + s(TOL_125, k = 10) +
s(TOL_2000, k = 10) + s(TOL_5000, k = 10)
+ s(TOL_20000, k = 10),
data = allDrifts, family = binomial, method = "REML")
# Soundscape metrics only, GLM
model4GLM <- glm(BWpresence ~ BB_20.24000 + TOL_63 + TOL_125 + TOL_2000
+ TOL_5000 + TOL_20000,
data = allDrifts, family = binomial)
model125 <- gam(BWpresence ~ s(TOL_125, k = 10),
data = allDrifts, family = binomial, method = "REML")
plot(model125, trans = plogis)
summary(model125)
gam.check(model125)
# Environmental var only
model5 <- gam(BWpresence ~ s(depth) + s(mldDepth) + s(Latitude)
+ s(Longitude) + s(sst_mean) + s(curl_mean) + s(dist2slope)
+ s(bathy_slope) + s(dist2shore) + s(chlorophyll_mean) + s(ssh_mean)
+ s(mldTemp) + s(ttDepth) + s(ttTemp) + s(temp400) + s(sal400),
data = allDrifts, family = binomial, method = "REML")
plogis(coef(model1[1]))
summary(model1)
summary(model4)
summary(model5)
summary(model4GLM)
plot(model4GLM)
gam.check(model1)
gam.check(model4)
#Log odds scale (when used with family = binomial)
plot(model1, pages = 6)
plot(model4, pages = 4, trans = plogis)
#Probability scale + centered on the intercept + adding intercept-related uncertainty with seWithMean arg
plot(model1, pages = 14, trans = plogis,
shift = coef(model1)[1])#,
#seWithMean = TRUE)
plot(model2, pages = 1, trans = plogis,
shift = coef(model2)[1])
plot(model4, pages = 6, trans = plogis,
shift = coef(model4)[1])
avgdB <- TO_23 %>%
summarize(TOL_25 = mean(TOL_25),
TOL_31.5 = mean(TOL_31.5),
TOL_40 = mean(TOL_40),
TOL_50 = mean(TOL_50),
TOL_63 = mean(TOL_63),
TOL_80 = mean(TOL_80),
TOL_100 = mean(TOL_100),
TOL_125 = mean(TOL_125),
TOL_160 = mean(TOL_160),
TOL_200 = mean(TOL_200),
TOL_250 = mean(TOL_250),
TOL_315 = mean(TOL_315),
TOL_400 = mean(TOL_400),
TOL_500 = mean(TOL_500),
TOL_630 = mean(TOL_630),
TOL_800 = mean(TOL_800),
TOL_1000 = mean(TOL_1000),
TOL_1250 = mean(TOL_1250),
TOL_1600 = mean(TOL_1600),
TOL_2000 = mean(TOL_2000),
TOL_2500 = mean(TOL_2500),
TOL_3150 = mean(TOL_3150),
TOL_4000 = mean(TOL_4000),
TOL_5000 = mean(TOL_5000),
TOL_6300 = mean(TOL_6300),
TOL_8000 = mean(TOL_8000),
TOL_10000 = mean(TOL_10000),
TOL_12500 = mean(TOL_12500),
TOL_16000 = mean(TOL_16000),
TOL_20000 = mean(TOL_20000)) %>%
pivot_longer(cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(avgdB, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
head(TO_23)
TO_longer <- pivot_longer(TO_10, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
if (!require('devtools')) install.packages('devtools')
# install from GitHub
devtools::install_github('EricArcher/rfPermute')
rfPermuteTutorial()
?rfPermuteTutorial()
library(rfPermute)
rfPermuteTutorial()
