TOL_50 = mean(TOL_50),
TOL_63 = mean(TOL_63),
TOL_80 = mean(TOL_80),
TOL_100 = mean(TOL_100),
TOL_125 = mean(TOL_125),
TOL_160 = mean(TOL_160),
TOL_200 = mean(TOL_200),
TOL_250 = mean(TOL_250),
TOL_315 = mean(TOL_315),
TOL_400 = mean(TOL_400),
TOL_500 = mean(TOL_500),
TOL_630 = mean(TOL_630),
TOL_800 = mean(TOL_800),
TOL_1000 = mean(TOL_1000),
TOL_1250 = mean(TOL_1250),
TOL_1600 = mean(TOL_1600),
TOL_2000 = mean(TOL_2000),
TOL_2500 = mean(TOL_2500),
TOL_3150 = mean(TOL_3150),
TOL_4000 = mean(TOL_4000),
TOL_5000 = mean(TOL_5000),
TOL_6300 = mean(TOL_6300),
TOL_8000 = mean(TOL_8000),
TOL_10000 = mean(TOL_10000),
TOL_12500 = mean(TOL_12500),
TOL_16000 = mean(TOL_16000),
TOL_20000 = mean(TOL_20000)) %>%
pivot_longer(cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(avgdB, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
avgdB <- TO_21 %>%
summarize(TOL_25 = mean(TOL_25),
TOL_31.5 = mean(TOL_31.5),
TOL_40 = mean(TOL_40),
TOL_50 = mean(TOL_50),
TOL_63 = mean(TOL_63),
TOL_80 = mean(TOL_80),
TOL_100 = mean(TOL_100),
TOL_125 = mean(TOL_125),
TOL_160 = mean(TOL_160),
TOL_200 = mean(TOL_200),
TOL_250 = mean(TOL_250),
TOL_315 = mean(TOL_315),
TOL_400 = mean(TOL_400),
TOL_500 = mean(TOL_500),
TOL_630 = mean(TOL_630),
TOL_800 = mean(TOL_800),
TOL_1000 = mean(TOL_1000),
TOL_1250 = mean(TOL_1250),
TOL_1600 = mean(TOL_1600),
TOL_2000 = mean(TOL_2000),
TOL_2500 = mean(TOL_2500),
TOL_3150 = mean(TOL_3150),
TOL_4000 = mean(TOL_4000),
TOL_5000 = mean(TOL_5000),
TOL_6300 = mean(TOL_6300),
TOL_8000 = mean(TOL_8000),
TOL_10000 = mean(TOL_10000),
TOL_12500 = mean(TOL_12500),
TOL_16000 = mean(TOL_16000),
TOL_20000 = mean(TOL_20000)) %>%
pivot_longer(cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(avgdB, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
avgdB <- TO_07 %>%
summarize(TOL_25 = mean(TOL_25),
TOL_31.5 = mean(TOL_31.5),
TOL_40 = mean(TOL_40),
TOL_50 = mean(TOL_50),
TOL_63 = mean(TOL_63),
TOL_80 = mean(TOL_80),
TOL_100 = mean(TOL_100),
TOL_125 = mean(TOL_125),
TOL_160 = mean(TOL_160),
TOL_200 = mean(TOL_200),
TOL_250 = mean(TOL_250),
TOL_315 = mean(TOL_315),
TOL_400 = mean(TOL_400),
TOL_500 = mean(TOL_500),
TOL_630 = mean(TOL_630),
TOL_800 = mean(TOL_800),
TOL_1000 = mean(TOL_1000),
TOL_1250 = mean(TOL_1250),
TOL_1600 = mean(TOL_1600),
TOL_2000 = mean(TOL_2000),
TOL_2500 = mean(TOL_2500),
TOL_3150 = mean(TOL_3150),
TOL_4000 = mean(TOL_4000),
TOL_5000 = mean(TOL_5000),
TOL_6300 = mean(TOL_6300),
TOL_8000 = mean(TOL_8000),
TOL_10000 = mean(TOL_10000),
TOL_12500 = mean(TOL_12500),
TOL_16000 = mean(TOL_16000),
TOL_20000 = mean(TOL_20000)) %>%
pivot_longer(cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(avgdB, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
avgdB <- TO_12 %>%
summarize(TOL_25 = mean(TOL_25),
TOL_31.5 = mean(TOL_31.5),
TOL_40 = mean(TOL_40),
TOL_50 = mean(TOL_50),
TOL_63 = mean(TOL_63),
TOL_80 = mean(TOL_80),
TOL_100 = mean(TOL_100),
TOL_125 = mean(TOL_125),
TOL_160 = mean(TOL_160),
TOL_200 = mean(TOL_200),
TOL_250 = mean(TOL_250),
TOL_315 = mean(TOL_315),
TOL_400 = mean(TOL_400),
TOL_500 = mean(TOL_500),
TOL_630 = mean(TOL_630),
TOL_800 = mean(TOL_800),
TOL_1000 = mean(TOL_1000),
TOL_1250 = mean(TOL_1250),
TOL_1600 = mean(TOL_1600),
TOL_2000 = mean(TOL_2000),
TOL_2500 = mean(TOL_2500),
TOL_3150 = mean(TOL_3150),
TOL_4000 = mean(TOL_4000),
TOL_5000 = mean(TOL_5000),
TOL_6300 = mean(TOL_6300),
TOL_8000 = mean(TOL_8000),
TOL_10000 = mean(TOL_10000),
TOL_12500 = mean(TOL_12500),
TOL_16000 = mean(TOL_16000),
TOL_20000 = mean(TOL_20000)) %>%
pivot_longer(cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(avgdB, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(avgdB, aes(x = TOL_63)) +
geom_histogram()
ggplot(TO_08, aes(x = TOL_63)) +
geom_histogram()
geom_boxplot
?geom_boxplot
ggplot(TO_08, aes(x = TOL_63)) +
geom_boxplot()
ggplot(TO_10, aes(x = TOL_63)) +
geom_boxplot()
TO_longer <- pivot_longer(TO_08, pivot_longer(cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB"))
head(TO_08)
TO_longer <- pivot_longer(TO_08, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot()
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_07, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_12, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_13, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_14, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_15, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
TO_longer <- pivot_longer(TO_16, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_17, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
TO_longer <- pivot_longer(TO_18, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_18, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_19, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_20, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_19, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_20, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_21, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_22, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_23, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_07, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_17, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
TO_longer <- pivot_longer(TO_18, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_19, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_20, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_21, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_22, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_23, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_07, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_08, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_10, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_12, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_13, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_14, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_16, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_17, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
TO_longer <- pivot_longer(TO_18, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_19, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_20, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_21, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_22, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_23, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_07, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_violin() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_21, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Violin plot
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_violin() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
TO_longer <- pivot_longer(TO_14, cols = TOL_25:TOL_20000,
names_to = "frequency",
values_to="dB")
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Violin plot
ggplot(TO_longer, aes(x = factor(frequency, levels = unique(frequency)), y = dB)) +
geom_violin() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
## code to prepare in `tracks` dataset goes here
library(tidyverse)
# Load raw rda file
load("data-raw/CCES2018_DriftTracks_Modified_03Nov2022.rda")
# Read in tracks, filter out lost buoys (1,2,3,5,6,9,11) and corrupted buoys (4,17)
tracks <- AllTracks %>%
dplyr::select(-dist, -speed) %>%
mutate(dateTime = round_date(.$dateTime, "20 minutes")) %>%      # round to nearest 20 minutes, will create duplicated in the data
filter(!station %in% c('1','2','3','4','5','6','9','11', '17')) %>%
rename(Longitude = long,                                 # Need these columns to specifically say this for ERDDAP matching
Latitude = lat,
UTC = dateTime)
tracks <- tracks[!duplicated(tracks[c('UTC', 'station')]),]    # Remove duplicates
# Save as RDS
saveRDS(tracks, 'data/tracks.rda')
# Filter by buoy
#tracks_08 <- tracks %>% dplyr::filter(station == "8")
track4 <- AllTracks %>% dplyr::filter(station == "4")
View(AllTracks)
## code to assemble clean dataframe for each buoy.
## Prerequisites include whales.R, tracks.R, soundscape_metrics.R.
# libraries ##########
library(tidyverse)
library(lubridate)
library(here)
# set up #####
# Set system time zone to UTC
Sys.setenv(TZ='UTC')
here()
######################
# Join TRACKS with WHALES (Start Rmd here)
######################
tracks <- readRDS('data/tracks.rda')
whales <- readRDS('data/whales.rda')
# Join tracks and whales
trk_whale <- left_join(tracks, whales, by = c("station","UTC"))
# Remove duplicates
trk_whale <- trk_whale[!duplicated(trk_whale[c('UTC', 'station')]),]
###############
# Filter whales by drift
##############
# Create list of drifts
d <- unique(trk_whale$station)
# Filter by drifts and assign to new variable
for (drift in d) {
assign(paste0("trk_whales", drift), trk_whale %>% dplyr::filter(station == drift))
}
# Results in trk_whales7, trk_whales8... objects
##############################################################
# Joining tracks with soundscape metrics with whale detections
##############################################################
## Make list of rda files to read in
iilist <- c("BB_07", "BB_08", "BB_10", "BB_12", "BB_13", "BB_14", "BB_16",
"BB_18", "BB_19", "BB_20", "BB_21", "BB_22", "BB_23", "TO_07",
"TO_08", "TO_10", "TO_12", "TO_13", "TO_14", "TO_16", "TO_18",
"TO_19", "TO_20", "TO_21", "TO_22", "TO_23")
## Read in rda files and assign to object
for (ii in iilist) {
dta <- readRDS(paste0('data/', ii, '.rda'))
assign(ii, dta)
}
# Make function to join whales + tracks, broadband, and TOL soundscape metrics and edit columns
joinTable <- function(w, s, t) {
left_join(w, s, by = join_by(closest("UTC" <= "dateTime"))) %>%     # join tracks with broadband metrics
.[!duplicated(.['UTC']),] %>%                                     # removes duplicates
left_join(., t, by = join_by(closest("UTC" <= "dateTime"))) %>%    # joins tracks/BB with TOL metrics
.[!duplicated(.['UTC']),] %>%                                     # removes duplicates formed from new join
mutate(Wpresence = if_else(is.na(nClicks), 0, 1)) %>%    # Add column to specify whale presence (1) or absence (0)
dplyr::select(UTC, spotID, Latitude, Longitude, station,
`BB_20-24000`,TOL_63, TOL_125, TOL_1600,
TOL_2000, TOL_3150, TOL_5000, TOL_8000,
TOL_10000, TOL_12500, TOL_20000, species, Wpresence)
}
# join whales detections + soundscape metrics (BB and TO) to each buoy track
# How can I loop this?
tracks_SS_07 <- joinTable(trk_whales7, BB_07, TO_07)
tracks_SS_08 <- joinTable(trk_whales8, BB_08, TO_08)
tracks_SS_10 <- joinTable(trk_whales10, BB_10, TO_10)
tracks_SS_12 <- joinTable(trk_whales12, BB_12, TO_12)
tracks_SS_13 <- joinTable(trk_whales13, BB_13, TO_13)
tracks_SS_14 <- joinTable(trk_whales14, BB_14, TO_14)
tracks_SS_16 <- joinTable(trk_whales16, BB_16, TO_16)
tracks_SS_18 <- joinTable(trk_whales18, BB_18, TO_18)
tracks_SS_19 <- joinTable(trk_whales19, BB_19, TO_19)
tracks_SS_20 <- joinTable(trk_whales20, BB_20, TO_20)
tracks_SS_21 <- joinTable(trk_whales21, BB_21, TO_21)
tracks_SS_22 <- joinTable(trk_whales22, BB_22, TO_22)
tracks_SS_23 <- joinTable(trk_whales23, BB_23, TO_23)
library(tidyverse)
library(mgcv)
ftlist <- dir("data/", recursive=TRUE, full.names=TRUE, pattern="fulltrack")
for (ft in ftlist) {
df <- readRDS(ft)
assign(paste0("fulltrack", substr(ft, 15, 16)), df)
}
allDrifts <- rbind(fulltrack07, fulltrack08, fulltrack10, fulltrack12, fulltrack13, fulltrack14,
fulltrack16, fulltrack18, fulltrack19, fulltrack20, fulltrack21, fulltrack22, fulltrack23)
allDrifts@species
allDrifts$species
unique(allDrifts$species)
allTracks
